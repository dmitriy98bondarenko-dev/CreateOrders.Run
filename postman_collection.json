{
	"info": {
		"_postman_id": "6ec68733-0865-4539-aa18-ee4af5b6ee9e",
		"name": "Uklon.CreateSmokeOrders.Run NEW",
		"description": "Для використання колекції необхідно змінити значення змінних колекції, таких як:\n\n- `UserName` - використати свій логін від райдер аккаунта\n- `Password` - використати свій пароль від райдер аккаунта\n- `WalletId` - змінити на гаманець тестового драйвера\n- `AdminLogin` - використати свій логін в адмінку\n- `AdminPassword` - використати свій пароль до адмінки\n    \n\nВ змінну `PromoCode` додано мультикод промо `DRIVER`, який буде дійсний до 01.11.25, після експайру, потрібно перестворити.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "11930149",
		"_collection_link": "https://driver-api-testing.postman.co/workspace/Uklon.DriverWorkspace.Team2~d4a3ef1c-d46a-4494-9732-e2002ffa66df/collection/11930149-6ec68733-0865-4539-aa18-ee4af5b6ee9e?action=share&source=collection_link&creator=11930149"
	},
	"item": [
		{
			"name": "Dependencies",
			"item": [
				{
					"name": "BalanceHelpers",
					"item": [
						{
							"name": "RiderBalanceRecharge",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"internalIdentityHost\") + '/api/v1/auth',",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"            \"contact\": pm.environment.get(\"adminUsername\"),",
											"            \"password\": pm.environment.get(\"adminPassword\"),",
											"            \"grant_type\": \"password\",",
											"            \"device_id\": pm.environment.get(\"appUid\"),",
											"            \"client_id\": pm.environment.get(\"clientId\")",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    if (err) {",
											"        console.log(\"Ошибка при запросе авторизации:\", err);",
											"    } else {",
											"        if (res.status === \"OK\") {",
											"            const responseJson = res.json();",
											"            const token = responseJson.access_token;",
											"",
											"            if (token) {",
											"                pm.request.headers.add({",
											"                    key: 'Authorization',",
											"                    value: `Bearer ${token}`",
											"                });",
											"                console.log(\"Токен успешно добавлен в заголовок Authorization:\", token);",
											"            } else {",
											"                console.log(\"Токен не найден в ответе.\");",
											"            }",
											"        } else {",
											"            console.log(\"Ошибка: неожиданный код статуса авторизации:\", res.status);",
											"        }",
											"    }",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminAuthToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNyc2Etc2hhMzg0IiwidHlwIjoiSldUIn0.eyJqdGkiOiIwNDUyYjBiNGFhMTI0ODliOTJlODcyNjQ4ZDM3YjMzMSIsInVuaXF1ZV9uYW1lIjoiMzgwOTM1NTEzODM5IiwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvd3MvMjAwNS8wNS9pZGVudGl0eS9jbGFpbXMvbmFtZSI6IjM4MDkzNTUxMzgzOSIsIm5hbWVpZCI6IjZhZjY1MjUyLWYxNTEtNDlmMC1iZTcwLTQ5NWMyNzFjYWQ1NiIsImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL25hbWVpZGVudGlmaWVyIjoiNmFmNjUyNTItZjE1MS00OWYwLWJlNzAtNDk1YzI3MWNhZDU2IiwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvd3MvMjAwNS8wNS9pZGVudGl0eS9jbGFpbXMvbW9iaWxlcGhvbmUiOiIzODA5MzU1MTM4MzkiLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9sb2NhbGl0eSI6IjEiLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL2dyb3Vwc2lkIjoiUTVWb1BGVnU4OUpERjdUVmhvSDR2MGprdk56elVwbjc2OG1JTTZMNzZUMD0iLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9lbWFpbGFkZHJlc3MiOiJkLnZvbG9zaHluQHVrbG9uLmNvbS51YSIsImVtYWlsIjoiZC52b2xvc2h5bkB1a2xvbi5jb20udWEiLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3JvbGUiOlsiT2JqZWN0T3duZXIiLCJPcmRlckFwaU93bmVyIiwiVHJ1c3RlZFVzZXIiLCJEZXZlbG9wZXIiLCJNYXJrZXRvbG9nIiwiQmV0YVRlc3RlciIsIkFjY291bnRhbnQiLCJJbnN1cmFuY2VBZ2VudCIsIkFjY291bnRhbnRTdXBlcnZpc29yIiwiRGlzcGF0Y2hlciIsIkRpc3BhdGNoU3VwZXJ2aXNvciIsIlF1YWxpdHlBZ2VudCIsIlVrbG9uRW1wbG95ZWUiLCJTbW1NYW5hZ2VyIiwiSW5jaWRlbnRNYW5hZ2VyIiwiVGVtcGxhdGVfTW9kZXJhdG9yIiwiQTJDTWFuYWdlciIsIkdsb2JhbFBhcnRuZXJNb2RlcmF0b3IiLCJBZG1pbmlzdHJhdG9yIiwiUGVhY2VLZWVwZXIiLCJTaHJlayIsIlJlc3RyaWN0ZWRTdXBlcnZpc29yIiwiQjJCTWFuYWdlciIsIlByaWNlTWFuYWdlciIsIkV4dGVybmFsT3BlcmF0b3IiLCJQYXJ0bmVyc01pZ3JhdGlvbk1vZGVyYXRvciIsIkdvZFBhcnRuZXJNb2RlcmF0b3IiLCJHb2RVc2VyIiwiTWFwTW9kZXJhdG9yIiwiR29kQ291cmllck1vZGVyYXRvciIsIkNvdXJpZXJNb2RlcmF0b3IiLCJNb2RlcmF0b3IiLCJQYXJ0bmVyTW9kZXJhdG9yIiwiQWNjZXNzTWFuYWdlciIsIkNvcmVBZG1pbmlzdHJhdG9yIiwiQm9udXNQYXltZW50cyIsIkNvcnBvcmF0ZUNvbXBhbnlBZG1pbmlzdHJhdG9yIiwiUGFydG5lck93bmVyIiwiUGFydG5lclNldHRpbmdNYW5hZ2VyIiwiQjJCRGVsaXZlcnlNYW5hZ2VyIiwiR2xvYmFsQ291cmllck1vZGVyYXRvciIsIkNvdXJpZXJBZG1pbmlzdHJhdG9yIiwiRmluYW5jZUNvbnRyb2xsZXIiLCJ0ZXN0Um9sZUZvckFEIl0sIm5iZiI6MTc0ODU4MDAyMSwiZXhwIjoxNzQ4NTg3MjIxLCJpYXQiOjE3NDg1ODAwMjEsImlzcyI6Imh0dHBzOi8vbm9ucHJvZC51a2xvbi5jb20udWEvIiwiYXVkIjoiaHR0cHM6Ly9ub25wcm9kLnVrbG9uLmNvbS51YS8iLCJwcm9wZXJ0aWVzIjp7ImRldmljZV9pZCI6Ijk1MDE5Mjc1LTAwMTAtNDkxZS05NWMwLWI3ZjUzODQ5OTkzOCIsImFwcF91aWQiOiI5NTAxOTI3NS0wMDEwLTQ5MWUtOTVjMC1iN2Y1Mzg0OTk5MzgiLCJjbGllbnRfaWQiOiJmMjY3OTdmZGM0ZTE0YjlkYmE2NGI1NGEzODFkNDA5NyIsInNvdXJjZSI6IkludGVybmFsIn19.elFetvef6dB7zp4ucWIgXws0EUbfSUO3meh6tCJSc2DAoF5dCQodFg6s4T360jhhJGfP3rDGP1Y4_m9aoHgmVUAs8p6ru-KQKZXSINcg_1l9IAr1MU0VGkUdPetYjN_JfRYeADf_EA20zoEvecUJVOa3zsLLHmFlXRCd6r9n_jwA_UlSwjmw7TZL4Ik-Hc6OJjpNMB71GATBuOI2UXA4tuCM_ODZDmsXOpSOsSurv14wjweK_DEmRL4x__h2bORzHqPP_oB0kNLnNetuzp_XXXvEBOUyJDzyM0hKe6vKZTtSAZO_ML7e-mDqysBmDqE4gC0tsI6C3zVPIC31usOotQ"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": {\n    \"amount\": 100,\n    \"currency\": \"UAH\"\n  },\n  \"order_id\": \"589f5b9f-4179-4799-9289-c2ef0c43ccc8\",\n  \"description\": \"test\",\n  \"initiated_by_user_id\": \"{{riderId}}\",\n  \"region_id\": 1,\n  \"profit_loss_type\": \"rider_penalty_other\",\n  \"vb_type\": \"rdr_penalties\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{paymentProcessorHost}}/api/v1/riders/{{riderId}}/wallet-payments/recharge",
									"host": [
										"{{paymentProcessorHost}}"
									],
									"path": [
										"api",
										"v1",
										"riders",
										"{{riderId}}",
										"wallet-payments",
										"recharge"
									]
								}
							},
							"response": []
						},
						{
							"name": "DriverBalanceRecharge",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"internalIdentityHost\") + '/api/v1/auth',",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"            \"contact\": pm.environment.get(\"adminUsername\"),",
											"            \"password\": pm.environment.get(\"adminPassword\"),",
											"            \"grant_type\": \"password\",",
											"            \"device_id\": pm.environment.get(\"appUid\"),",
											"            \"client_id\": pm.environment.get(\"clientId\")",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    if (err) {",
											"        console.log(\"Ошибка при запросе авторизации:\", err);",
											"    } else {",
											"        if (res.status === \"OK\") {",
											"            const responseJson = res.json();",
											"            const token = responseJson.access_token;",
											"",
											"            if (token) {",
											"                pm.request.headers.add({",
											"                    key: 'Authorization',",
											"                    value: `Bearer ${token}`",
											"                });",
											"                console.log(\"Токен успешно добавлен в заголовок Authorization:\", token);",
											"            } else {",
											"                console.log(\"Токен не найден в ответе.\");",
											"            }",
											"        } else {",
											"            console.log(\"Ошибка: неожиданный код статуса авторизации:\", res.status);",
											"        }",
											"    }",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminAuthToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"amount\": 1000,\n    \"description\": \"test\",\n    \"initiated_by_user_id\": \"f05a3650-d531-497e-add1-c3badd0c4370\",\n    \"profit_loss_type\": \"driver_app_fee\",\n    \"region_id\": 1,\n    \"vb_type\": \"bonus_order\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{adminGatewayHost}}/api/v2/admin/finance/wallets/{{walletId}}/partner-payments/recharge",
									"host": [
										"{{adminGatewayHost}}"
									],
									"path": [
										"api",
										"v2",
										"admin",
										"finance",
										"wallets",
										"{{walletId}}",
										"partner-payments",
										"recharge"
									]
								}
							},
							"response": []
						},
						{
							"name": "DriverBalanceCharge",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"internalIdentityHost\") + '/api/v1/auth',",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"            \"contact\": pm.environment.get(\"adminUsername\"),",
											"            \"password\": pm.environment.get(\"adminPassword\"),",
											"            \"grant_type\": \"password\",",
											"            \"device_id\": pm.environment.get(\"appUid\"),",
											"            \"client_id\": pm.environment.get(\"clientId\")",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    if (err) {",
											"        console.log(\"Ошибка при запросе авторизации:\", err);",
											"    } else {",
											"        if (res.status === \"OK\") {",
											"            const responseJson = res.json();",
											"            const token = responseJson.access_token;",
											"",
											"            if (token) {",
											"                pm.request.headers.add({",
											"                    key: 'Authorization',",
											"                    value: `Bearer ${token}`",
											"                });",
											"                console.log(\"Токен успешно добавлен в заголовок Authorization:\", token);",
											"            } else {",
											"                console.log(\"Токен не найден в ответе.\");",
											"            }",
											"        } else {",
											"            console.log(\"Ошибка: неожиданный код статуса авторизации:\", res.status);",
											"        }",
											"    }",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"amount\": 10,\n    \"description\": \"Test\",\n    \"initiated_by_user_id\": \"f05a3650d531497eadd1c3badd0c4370\",\n    \"profit_loss_type\": \"driver_penalty_order_other\",\n    \"region_id\": 1,\n    \"vb_type\": \"cash_order_fee\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{adminGatewayHost}}/api/v2/admin/finance/wallets/{{walletId}}/partner-payments/charge",
									"host": [
										"{{adminGatewayHost}}"
									],
									"path": [
										"api",
										"v2",
										"admin",
										"finance",
										"wallets",
										"{{walletId}}",
										"partner-payments",
										"charge"
									]
								}
							},
							"response": []
						},
						{
							"name": "RiderBalanceCharge",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"internalIdentityHost\") + '/api/v1/auth',",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"            \"contact\": pm.environment.get(\"adminUsername\"),",
											"            \"password\": pm.environment.get(\"adminPassword\"),",
											"            \"grant_type\": \"password\",",
											"            \"device_id\": pm.environment.get(\"appUid\"),",
											"            \"client_id\": pm.environment.get(\"clientId\")",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    if (err) {",
											"        console.log(\"Ошибка при запросе авторизации:\", err);",
											"    } else {",
											"        if (res.status === \"OK\") {",
											"            const responseJson = res.json();",
											"            const token = responseJson.access_token;",
											"",
											"            if (token) {",
											"                pm.request.headers.add({",
											"                    key: 'Authorization',",
											"                    value: `Bearer ${token}`",
											"                });",
											"                console.log(\"Токен успешно добавлен в заголовок Authorization:\", token);",
											"            } else {",
											"                console.log(\"Токен не найден в ответе.\");",
											"            }",
											"        } else {",
											"            console.log(\"Ошибка: неожиданный код статуса авторизации:\", res.status);",
											"        }",
											"    }",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminAuthToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "{{adminAuthToken}}",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": {\n    \"amount\": 100,\n    \"currency\": \"UAH\"\n  },\n  \"order_id\": \"589f5b9f-4179-4799-9289-c2ef0c43ccc8\",\n  \"description\": \"test\",\n  \"initiated_by_user_id\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"region_id\": 1,\n  \"profit_loss_type\": \"rider_penalty_other\",\n  \"vb_type\": \"rdr_penalties\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{paymentProcessorHost}}/api/v1/riders/{{riderId}}/wallet-payments/charge",
									"host": [
										"{{paymentProcessorHost}}"
									],
									"path": [
										"api",
										"v1",
										"riders",
										"{{riderId}}",
										"wallet-payments",
										"charge"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetRiderPaymentMethod",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{riderAuthToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "client_id",
										"value": "6289de851fc726f887af8d5d7a56c635"
									},
									{
										"key": "locale",
										"value": "ru"
									},
									{
										"key": "city",
										"value": "Kyiv"
									},
									{
										"key": "app_uid",
										"value": "00000000-0000-0000-0000-000000000000"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNyc2Etc2hhMzg0IiwidHlwIjoiSldUIn0.eyJqdGkiOiI5NjUxMGQ4MTY2ZTg0ZTRkOGJlM2RjM2E1NGNkZWZiMCIsInVuaXF1ZV9uYW1lIjoiMzgwOTM1NTEzODMzIiwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvd3MvMjAwNS8wNS9pZGVudGl0eS9jbGFpbXMvbmFtZSI6IjM4MDkzNTUxMzgzMyIsIm5hbWVpZCI6ImJjNGMyZjUxLWRjOGYtNDc5Yy05MzE3LTUzOTAwZjdlZTZjNyIsImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL25hbWVpZGVudGlmaWVyIjoiYmM0YzJmNTEtZGM4Zi00NzljLTkzMTctNTM5MDBmN2VlNmM3IiwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvd3MvMjAwNS8wNS9pZGVudGl0eS9jbGFpbXMvbW9iaWxlcGhvbmUiOiIzODA5MzU1MTM4MzMiLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9sb2NhbGl0eSI6IjEiLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL2dyb3Vwc2lkIjoiSjFBVkY0Z3VhR0hwTTZZam5JWWo2UmRBMjNOakZCaHBUWkdMdHprNmFnST0iLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9lbWFpbGFkZHJlc3MiOiJkQHVrci5uZXQiLCJlbWFpbCI6ImRAdWtyLm5ldCIsIm5iZiI6MTc0NTQ5ODE0NCwiZXhwIjoxNzQ1NTAxNzQ0LCJpYXQiOjE3NDU0OTgxNDQsImlzcyI6Imh0dHBzOi8vc3RhZ2luZy51a2xvbi5jb20udWEvIiwiYXVkIjoiaHR0cHM6Ly9zdGFnaW5nLnVrbG9uLmNvbS51YS8iLCJwcm9wZXJ0aWVzIjp7ImRldmljZV9pZCI6IjhhNTFlZjQwLTI3ZDQtNDRmNy1iZWU3LTQ2ZTFlNGZiNmY1MSIsImFwcF91aWQiOiI4YTUxZWY0MC0yN2Q0LTQ0ZjctYmVlNy00NmUxZTRmYjZmNTEiLCJjbGllbnRfaWQiOiI2Mjg5ZGU4NTFmYzcyNmY4ODdhZjhkNWQ3YTU2YzYzNSIsInNvdXJjZSI6IklkZW50aXR5MiJ9fQ.UhU9rbMzumRGXIviVqj0VoHmE8jyVixA0tp8BoRlL4tiu58kNDpxAm3S1m3SdbzfHAMXU8iJcslGXgt-IvHZfHZ-l9QiOxUIfubUE8LBMZqm2CBHsQalJZ_1STuoLUD1bNIT3y27butUNd4SBQjL0vTF099TLBrwWCciSJHXseW4MQdkWdxxvVAl_4-RLzrKWwZlFlAbO6EdxCEAyazpVEILryxeT-Qll9-DddAyXEeJWHqIMjotaVtsLrHUdQ1jIeigYiIlKhjk6lb6ihe_U7IzoOceUGCVzaunyYNpvTEMKRyCO3CS11wmeao9lTWxKP_ZrUzMq-CR8QO481iwSQ"
									}
								],
								"url": {
									"raw": "{{riderGatewayHost}}/api/v1/payment-methods",
									"host": [
										"{{riderGatewayHost}}"
									],
									"path": [
										"api",
										"v1",
										"payment-methods"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "AuthHelpers",
					"item": [
						{
							"name": "RiderAuth",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (pm.response.code === 200) {",
											"    const responseJson = pm.response.json();",
											"    const token = responseJson.access_token;",
											"",
											"    if (token) {",
											"        pm.environment.set(\"riderAuthToken\", token);",
											"        console.log(\"AccessToken успешно сохранен:\", token);",
											"    } else {",
											"        console.log(\"Токен не найден в ответе.\");",
											"    }",
											"} else { ",
											"    console.log(\"Ошибка авторизации. Код статуса:\", pm.response.code);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "client_id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "app_uid",
										"value": "{{appUid}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": {{riderUserName}},\n  \"password\": {{riderPassword}},\n  \"client_id\": {{clientId}},\n  \"client_secret\": \"string\",\n  \"grant_type\": \"password\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{riderGatewayHost}}/api/v2/account/auth",
									"host": [
										"{{riderGatewayHost}}"
									],
									"path": [
										"api",
										"v2",
										"account",
										"auth"
									]
								}
							},
							"response": []
						},
						{
							"name": "CorpRiderAuth",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (pm.response.code === 200) {",
											"    const responseJson = pm.response.json();",
											"    const token = responseJson.access_token;",
											"",
											"    if (token) {",
											"        pm.environment.set(\"corporateRiderAuthToken\", token);",
											"        console.log(\"AccessToken успешно сохранен:\", token);",
											"    } else {",
											"        console.log(\"Токен не найден в ответе.\");",
											"    }",
											"} else {",
											"    console.log(\"Ошибка авторизации. Код статуса:\", pm.response.code);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "client_id",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "app_uid",
										"value": "{{appUid}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": {{corporateRiderUserName}},\n  \"password\": {{corporatePassword}},\n  \"client_id\": {{clientId}},\n  \"client_secret\": \"string\",\n  \"grant_type\": \"password\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{riderGatewayHost}}/api/v2/account/auth",
									"host": [
										"{{riderGatewayHost}}"
									],
									"path": [
										"api",
										"v2",
										"account",
										"auth"
									]
								}
							},
							"response": []
						},
						{
							"name": "AdminAuth",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (pm.response.code === 200) {",
											"    const responseJson = pm.response.json();",
											"    const token = responseJson.access_token;",
											"",
											"    if (token) {",
											"        pm.environment.set(\"adminAuthToken\", token);",
											"        console.log(\"AccessToken збережено:\", token);",
											"    } else {",
											"        console.log(\"Токен не найден в ответе.\");",
											"    }",
											"} else {",
											"    console.log(\"Ошибка авторизации. Код статуса:\", pm.response.code);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"contact\": \"{{adminUsername}}\",\n    \"password\": \"{{adminPassword}}\",\n    \"grant_type\": \"password\",\n    \"device_id\": \"{{appUid}}\",\n    \"client_id\": \"{{clientId}}\"\n  }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{internalIdentityHost}}/api/v1/auth",
									"host": [
										"{{internalIdentityHost}}"
									],
									"path": [
										"api",
										"v1",
										"auth"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Promo",
					"item": [
						{
							"name": "PromoApply",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{riderAuthToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "app_uid",
										"value": "{{appUid}}",
										"type": "text"
									},
									{
										"key": "client_id",
										"value": "{{clientId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"promo_code\": {{promoCodeName}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{riderGatewayHost}}/api/v1/promo-codes/apply",
									"host": [
										"{{riderGatewayHost}}"
									],
									"path": [
										"api",
										"v1",
										"promo-codes",
										"apply"
									]
								}
							},
							"response": []
						},
						{
							"name": "CreatePromoCampaigns",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "accept-language",
										"value": "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7"
									},
									{
										"key": "authorization",
										"value": "Bearer eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNyc2Etc2hhMzg0IiwidHlwIjoiSldUIn0.eyJqdGkiOiJmODAwYjliOTk0NGY0YzBhYmUwZTk1ODA3OTliM2Y4MCIsInVuaXF1ZV9uYW1lIjoiMzgwOTM1NTEzODM5IiwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvd3MvMjAwNS8wNS9pZGVudGl0eS9jbGFpbXMvbmFtZSI6IjM4MDkzNTUxMzgzOSIsIm5hbWVpZCI6IjZhZjY1MjUyLWYxNTEtNDlmMC1iZTcwLTQ5NWMyNzFjYWQ1NiIsImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL25hbWVpZGVudGlmaWVyIjoiNmFmNjUyNTItZjE1MS00OWYwLWJlNzAtNDk1YzI3MWNhZDU2IiwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvd3MvMjAwNS8wNS9pZGVudGl0eS9jbGFpbXMvbW9iaWxlcGhvbmUiOiIzODA5MzU1MTM4MzkiLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9sb2NhbGl0eSI6IjEiLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL2dyb3Vwc2lkIjoiUTVWb1BGVnU4OUpERjdUVmhvSDR2MGprdk56elVwbjc2OG1JTTZMNzZUMD0iLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9lbWFpbGFkZHJlc3MiOiJkLnZvbG9zaHluQHVrbG9uLmNvbS51YSIsImVtYWlsIjoiZC52b2xvc2h5bkB1a2xvbi5jb20udWEiLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3JvbGUiOlsiT2JqZWN0T3duZXIiLCJPcmRlckFwaU93bmVyIiwiVHJ1c3RlZFVzZXIiLCJEZXZlbG9wZXIiLCJNYXJrZXRvbG9nIiwiQmV0YVRlc3RlciIsIkFjY291bnRhbnQiLCJJbnN1cmFuY2VBZ2VudCIsIkFjY291bnRhbnRTdXBlcnZpc29yIiwiRGlzcGF0Y2hlciIsIkRpc3BhdGNoU3VwZXJ2aXNvciIsIlF1YWxpdHlBZ2VudCIsIlVrbG9uRW1wbG95ZWUiLCJTbW1NYW5hZ2VyIiwiSW5jaWRlbnRNYW5hZ2VyIiwiVGVtcGxhdGVfTW9kZXJhdG9yIiwiQTJDTWFuYWdlciIsIkdsb2JhbFBhcnRuZXJNb2RlcmF0b3IiLCJBZG1pbmlzdHJhdG9yIiwiUGVhY2VLZWVwZXIiLCJTaHJlayIsIlJlc3RyaWN0ZWRTdXBlcnZpc29yIiwiQjJCTWFuYWdlciIsIlByaWNlTWFuYWdlciIsIkV4dGVybmFsT3BlcmF0b3IiLCJQYXJ0bmVyc01pZ3JhdGlvbk1vZGVyYXRvciIsIkdvZFBhcnRuZXJNb2RlcmF0b3IiLCJHb2RVc2VyIiwiTWFwTW9kZXJhdG9yIiwiR29kQ291cmllck1vZGVyYXRvciIsIkNvdXJpZXJNb2RlcmF0b3IiLCJNb2RlcmF0b3IiLCJQYXJ0bmVyTW9kZXJhdG9yIiwiQWNjZXNzTWFuYWdlciIsIkNvcmVBZG1pbmlzdHJhdG9yIiwiQm9udXNQYXltZW50cyIsIkNvcnBvcmF0ZUNvbXBhbnlBZG1pbmlzdHJhdG9yIiwiUGFydG5lck93bmVyIiwiUGFydG5lclNldHRpbmdNYW5hZ2VyIiwiQjJCRGVsaXZlcnlNYW5hZ2VyIiwiR2xvYmFsQ291cmllck1vZGVyYXRvciIsIkNvdXJpZXJBZG1pbmlzdHJhdG9yIiwiRmluYW5jZUNvbnRyb2xsZXIiLCJ0ZXN0Um9sZUZvckFEIl0sIm5iZiI6MTc0ODYxNDE1NSwiZXhwIjoxNzQ4NjIxMzU1LCJpYXQiOjE3NDg2MTQxNTUsImlzcyI6Imh0dHBzOi8vbm9ucHJvZC51a2xvbi5jb20udWEvIiwiYXVkIjoiaHR0cHM6Ly9ub25wcm9kLnVrbG9uLmNvbS51YS8iLCJwcm9wZXJ0aWVzIjp7ImRldmljZV9pZCI6Ijk1MDE5Mjc1LTAwMTAtNDkxZS05NWMwLWI3ZjUzODQ5OTkzOCIsImFwcF91aWQiOiI5NTAxOTI3NS0wMDEwLTQ5MWUtOTVjMC1iN2Y1Mzg0OTk5MzgiLCJjbGllbnRfaWQiOiJmMjY3OTdmZGM0ZTE0YjlkYmE2NGI1NGEzODFkNDA5NyIsInNvdXJjZSI6IkludGVybmFsIn19.Dh_kXu7EwyvIM_7-EtmyvlHfdVNn1rp6C5ha4YHZgEllSt6VbXxeRe8kXx97aQvI1jmEMnxLiooc3A-MRr9vvV6nEqHtkmq_0I6rKVIqo_zNZqRUFAjANPfCwUThBLLUAMI4H574x2uGWN1qwkE7mbBt4QmETNlbF3IKrqTweMfxB8f46VLlyoePeg-x5cm5t7M1ds61RRnBP0f8QaQq1Acvg89ryu6VnsTbflr2ycQjOfiVQpxNmsUr2Y3URQEw0i5A01fctwSg0RZi0tPdWSe70RoQTjjMP9qAIfok_Ruigr05BmbV2Ij2T34C-WpoazT0D1FKAiyiU0DyrzHsqQ"
									},
									{
										"key": "content-type",
										"value": "application/json"
									},
									{
										"key": "origin",
										"value": "https://wa.dev.uklon.net"
									},
									{
										"key": "priority",
										"value": "u=1, i"
									},
									{
										"key": "referer",
										"value": "https://wa.dev.uklon.net/"
									},
									{
										"key": "sec-ch-ua",
										"value": "\"Chromium\";v=\"136\", \"Google Chrome\";v=\"136\", \"Not.A/Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "sec-ch-ua-platform",
										"value": "\"macOS\""
									},
									{
										"key": "sec-fetch-dest",
										"value": "empty"
									},
									{
										"key": "sec-fetch-mode",
										"value": "cors"
									},
									{
										"key": "sec-fetch-site",
										"value": "same-site"
									},
									{
										"key": "user-agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"id\":\"1b38776b-a30f-4e54-a332-49d098ef00f1\",\n   \"code\":\"DRIVER200\", //need unique\n   \"type\":\"multi\",\n   \"multi_code\":\"DRIVER200\", //need unique\n   \"name\":\"DRIVER200\", //need unique\n   \"life_time\":{\n      \"range\":[\n         1744837200,\n         1777582799\n      ]\n   },\n   \"promo_code_duration_seconds\":31536000,\n   \"status\":\"draft\",\n   \"specification\":{\n      \"regions\":[\n         3,\n         13,\n         33,\n         15,\n         17,\n         12,\n         21,\n         24,\n         26,\n         2,\n         40,\n         20,\n         28,\n         18,\n         22,\n         14,\n         25,\n         23,\n         9,\n         4,\n         6,\n         19,\n         5,\n         7,\n         16,\n         11,\n         10,\n         8,\n         1\n      ],\n      \"product_types\":[\n         {\n            \"code\":\"ComfortPlus\"\n         },\n         {\n            \"code\":\"Driver\"\n         },\n         {\n            \"code\":\"EngineStart\"\n         },\n         {\n            \"code\":\"Green\"\n         },\n         {\n            \"code\":\"Premium\"\n         },\n         {\n            \"code\":\"Prime\"\n         },\n         {\n            \"code\":\"Standard\"\n         },\n         {\n            \"code\":\"Wagon\"\n         },\n         {\n            \"code\":\"Women\"\n         }\n      ],\n      \"payment_types\":[\n         \"cash\",\n         \"card\",\n         \"google\",\n         \"apple\"\n      ],\n      \"card_types\":[\n         \n      ],\n      \"order_time\":[\n         \n      ]\n   },\n   \"discount\":{\n      \"amount\": 100,\n      \"unit\":\"$\",\n      \"currency\":\"UAH\",\n      \"min\":null,\n      \"max\":null\n   },\n   \"cascade_discount\":{\n      \"unit\":\"$\",\n      \"currency\":\"UAH\",\n      \"cascade\":[\n         \n      ]\n   },\n   \"max_apply_number\":1,\n   \"max_user_codes_number\":1000,\n   \"max_codes_number\":99999,\n   \"new_user_only\":false,\n   \"master_card_world_elite\":false,\n   \"generating_period\":null,\n   \"time_zone\":\"Europe/Kiev\",\n   \"tags\":[\n      \n   ],\n   \"user_id\":\"6af65252-f151-49f0-be70-495c271cad56\",\n   \"updated_at\":1748580726\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{adminGatewayHost}}/api/v1/admin/promo-campaigns/campaigns",
									"host": [
										"{{adminGatewayHost}}"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"promo-campaigns",
										"campaigns"
									]
								}
							},
							"response": []
						},
						{
							"name": "UpdatePromoCampaign",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "accept",
										"value": "application/json, text/plain, */*"
									},
									{
										"key": "accept-language",
										"value": "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7"
									},
									{
										"key": "authorization",
										"value": "Bearer eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNyc2Etc2hhMzg0IiwidHlwIjoiSldUIn0.eyJqdGkiOiIxNWMzMDAxMmMxNmM0ODkwYjA0NjQ1ZDUzNDUzMTIzYSIsInVuaXF1ZV9uYW1lIjoiMzgwOTM1NTEzODM5IiwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvd3MvMjAwNS8wNS9pZGVudGl0eS9jbGFpbXMvbmFtZSI6IjM4MDkzNTUxMzgzOSIsIm5hbWVpZCI6IjZhZjY1MjUyLWYxNTEtNDlmMC1iZTcwLTQ5NWMyNzFjYWQ1NiIsImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL25hbWVpZGVudGlmaWVyIjoiNmFmNjUyNTItZjE1MS00OWYwLWJlNzAtNDk1YzI3MWNhZDU2IiwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvd3MvMjAwNS8wNS9pZGVudGl0eS9jbGFpbXMvbW9iaWxlcGhvbmUiOiIzODA5MzU1MTM4MzkiLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9sb2NhbGl0eSI6IjEiLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL2dyb3Vwc2lkIjoicEFJSUhxdnozdmRQZlp1QnJFWEtFbTFZc1NqZGZCaTdxQ0doOUxHd2N3UT0iLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9lbWFpbGFkZHJlc3MiOiJkLnZvbG9zaHluQHVrbG9uLmNvbS51YSIsImVtYWlsIjoiZC52b2xvc2h5bkB1a2xvbi5jb20udWEiLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3JvbGUiOlsiT2JqZWN0T3duZXIiLCJPcmRlckFwaU93bmVyIiwiVHJ1c3RlZFVzZXIiLCJEZXZlbG9wZXIiLCJNYXJrZXRvbG9nIiwiQmV0YVRlc3RlciIsIkFjY291bnRhbnQiLCJJbnN1cmFuY2VBZ2VudCIsIkFjY291bnRhbnRTdXBlcnZpc29yIiwiRGlzcGF0Y2hlciIsIkRpc3BhdGNoU3VwZXJ2aXNvciIsIlF1YWxpdHlBZ2VudCIsIlVrbG9uRW1wbG95ZWUiLCJTbW1NYW5hZ2VyIiwiSW5jaWRlbnRNYW5hZ2VyIiwiVGVtcGxhdGVfTW9kZXJhdG9yIiwiQTJDTWFuYWdlciIsIkdsb2JhbFBhcnRuZXJNb2RlcmF0b3IiLCJBZG1pbmlzdHJhdG9yIiwiUGVhY2VLZWVwZXIiLCJTaHJlayIsIlJlc3RyaWN0ZWRTdXBlcnZpc29yIiwiQjJCTWFuYWdlciIsIlByaWNlTWFuYWdlciIsIkV4dGVybmFsT3BlcmF0b3IiLCJQYXJ0bmVyc01pZ3JhdGlvbk1vZGVyYXRvciIsIkdvZFBhcnRuZXJNb2RlcmF0b3IiLCJHb2RVc2VyIiwiTWFwTW9kZXJhdG9yIiwiR29kQ291cmllck1vZGVyYXRvciIsIkNvdXJpZXJNb2RlcmF0b3IiLCJNb2RlcmF0b3IiLCJQYXJ0bmVyTW9kZXJhdG9yIiwiQWNjZXNzTWFuYWdlciIsIkNvcmVBZG1pbmlzdHJhdG9yIiwiQm9udXNQYXltZW50cyIsIkNvcnBvcmF0ZUNvbXBhbnlBZG1pbmlzdHJhdG9yIiwiUGFydG5lck93bmVyIiwiUGFydG5lclNldHRpbmdNYW5hZ2VyIiwiQjJCRGVsaXZlcnlNYW5hZ2VyIiwiR2xvYmFsQ291cmllck1vZGVyYXRvciIsIkNvdXJpZXJBZG1pbmlzdHJhdG9yIiwiRmluYW5jZUNvbnRyb2xsZXIiLCJ0ZXN0Um9sZUZvckFEIl0sIm5iZiI6MTc0OTIxNzIwNSwiZXhwIjoxNzQ5MjI0NDA1LCJpYXQiOjE3NDkyMTcyMDUsImlzcyI6Imh0dHBzOi8vbm9ucHJvZC51a2xvbi5jb20udWEvIiwiYXVkIjoiaHR0cHM6Ly9ub25wcm9kLnVrbG9uLmNvbS51YS8iLCJwcm9wZXJ0aWVzIjp7ImRldmljZV9pZCI6Ijk1MDE5Mjc1LTAwMTAtNDkxZS05NWMwLWI3ZjUzODQ5OTkzOCIsImFwcF91aWQiOiI5NTAxOTI3NS0wMDEwLTQ5MWUtOTVjMC1iN2Y1Mzg0OTk5MzgiLCJjbGllbnRfaWQiOiJmMjY3OTdmZGM0ZTE0YjlkYmE2NGI1NGEzODFkNDA5NyIsInNvdXJjZSI6IkludGVybmFsIn19.GssWgKm1BCBqFPNkOs2-ID6Q0In-LNVmhGm2DiokX-zRudCS-AY89qrV4q48CTu6CEmej9VuJGbcXMHE7BgNj7pbUKkh0x7F1Ed-3nTdUbkq1Y2r-7cHUcgRk8SOLu2O4iwqyE1o5QRjOPsbgh_r6mtOYJnz7HhzqZNJJRiH5rqW_vRbW_O7bQEvSOG8qRLJlnzUyWjlY6d58itdp2X-pBwhdPvyy6uS7kw5VaZVE4RBYUqIobm8Jq62OWMq4NK88mtKsfFOMlOod5ejRy4BRixQb0wQ0mUKgN4uLLHEYrBD3nRgpBsm5OYAjBZ0ycYz8HfDBS_7PLDAkp9yrg9Ecg"
									},
									{
										"key": "content-type",
										"value": "application/json"
									},
									{
										"key": "origin",
										"value": "https://wa.dev.uklon.net"
									},
									{
										"key": "priority",
										"value": "u=1, i"
									},
									{
										"key": "referer",
										"value": "https://wa.dev.uklon.net/"
									},
									{
										"key": "sec-ch-ua",
										"value": "\"Chromium\";v=\"136\", \"Google Chrome\";v=\"136\", \"Not.A/Brand\";v=\"99\""
									},
									{
										"key": "sec-ch-ua-mobile",
										"value": "?0"
									},
									{
										"key": "sec-ch-ua-platform",
										"value": "\"macOS\""
									},
									{
										"key": "sec-fetch-dest",
										"value": "empty"
									},
									{
										"key": "sec-fetch-mode",
										"value": "cors"
									},
									{
										"key": "sec-fetch-site",
										"value": "same-site"
									},
									{
										"key": "user-agent",
										"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"ed8988b9-3ce5-4f7e-b109-626f6c9292bc\",\n    \"code\": \"DRIVER\",\n    \"type\": \"multi\",\n    \"multi_code\": \"DRIVER\",\n    \"name\": \"DRIVER\",\n    \"life_time\": {\n        \"range\": [\n            1744837200,\n            1777582799\n        ]\n    },\n    \"promo_code_duration_seconds\": 31536000,\n    \"status\": \"active\",\n    \"specification\": {\n        \"regions\": [\n            3,\n            13,\n            33,\n            15,\n            17,\n            12,\n            21,\n            24,\n            26,\n            2,\n            40,\n            20,\n            28,\n            18,\n            22,\n            14,\n            25,\n            23,\n            9,\n            4,\n            6,\n            19,\n            5,\n            7,\n            16,\n            11,\n            10,\n            8,\n            1\n        ],\n        \"product_types\": [\n            {\n                \"code\": \"ComfortPlus\"\n            },\n            {\n                \"code\": \"Driver\"\n            },\n            {\n                \"code\": \"EngineStart\"\n            },\n            {\n                \"code\": \"Green\"\n            },\n            {\n                \"code\": \"Premium\"\n            },\n            {\n                \"code\": \"Prime\"\n            },\n            {\n                \"code\": \"Standard\"\n            },\n            {\n                \"code\": \"Wagon\"\n            },\n            {\n                \"code\": \"Women\"\n            }\n        ],\n        \"payment_types\": [\n            \"cash\",\n            \"card\",\n            \"google\",\n            \"apple\"\n        ],\n        \"card_types\": [],\n        \"order_time\": []\n    },\n    \"discount\": {\n        \"amount\": 50,\n        \"unit\": \"$\",\n        \"currency\": \"UAH\",\n        \"min\": null,\n        \"max\": null\n    },\n    \"cascade_discount\": {\n        \"unit\": \"$\",\n        \"currency\": \"UAH\",\n        \"cascade\": []\n    },\n    \"max_apply_number\": 1,\n    \"max_user_codes_number\": 1000,\n    \"max_codes_number\": 99999,\n    \"new_user_only\": false,\n    \"master_card_world_elite\": false,\n    \"generating_period\": null,\n    \"time_zone\": \"Europe/Kiev\",\n    \"tags\": [],\n    \"user_id\": \"6af65252-f151-49f0-be70-495c271cad56\",\n    \"updated_at\": 1748580726\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{adminGatewayHost}}/api/v1/admin/promo-campaigns/campaigns/{{promoCampaignId}}",
									"host": [
										"{{adminGatewayHost}}"
									],
									"path": [
										"api",
										"v1",
										"admin",
										"promo-campaigns",
										"campaigns",
										"{{promoCampaignId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Cancel Order by rider",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{riderAuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "app_uid",
								"value": "{{appUid}}",
								"type": "text"
							},
							{
								"key": "client_id",
								"value": "{{clientId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"reason\": \"plans_changed\",\n  \"comment\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{riderGatewayHost}}/api/v1/orders/{{orderId}}",
							"host": [
								"{{riderGatewayHost}}"
							],
							"path": [
								"api",
								"v1",
								"orders",
								"{{orderId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "CreateOrders",
			"item": [
				{
					"name": "Order.Standart",
					"item": [
						{
							"name": "Fare Estimate",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const fareId = pm.variables.replaceIn(\"{{$randomUUID}}\");",
											"pm.environment.set(\"orderId\", fareId);",
											"console.log(\"Сгенерированный fare_id:\", fareId);",
											"",
											"pm.sendRequest({",
											"    url: pm.environment.get(\"riderGatewayHost\") + \"/api/v1/payment-methods\",",
											"    method: 'GET',",
											"    header: {",
											"        'Content-Type': 'application/json',",
											"        'app_uid': pm.environment.get(\"appUid\"),",
											"        'Authorization': `Bearer ${pm.environment.get(\"riderAuthToken\")}`,",
											"    }",
											"}, function (err, res) {",
											"    if (!err) {",
											"        const json = res.json();",
											"",
											"        if (json.last_used && json.last_used.id) {",
											"            pm.environment.set(\"lastUsedPaymentId\", json.last_used.id);",
											"        }",
											"",
											"        if (Array.isArray(json.payment_methods)) {",
											"            const firstCard = json.payment_methods.find(method => method.payment_type === \"card\");",
											"            if (firstCard && firstCard.id) {",
											"                pm.environment.set(\"paymentMethodId\", firstCard.id);",
											"            }",
											"        }",
											"    } else {",
											"        console.log(\"Request failed\", err);",
											"    }",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{riderAuthToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "app_uid",
										"value": "{{appUid}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"fare_id\": {{orderId}},\n\t\"include_route_info\": true,\n    //\"pickup_time\": 1739456255,\n\t\"route\": {\n\t\t\"points\": [{\n\t\t\t\"lat\": 50.37567,\n\t\t\t\"lng\": 30.45273,\n\t\t\t\"name\": \"Композитора Лятошинского улица, 2\"\n\t\t}, {\n\t\t\t\"lat\": 50.47233,\n\t\t\t\"lng\": 30.51883,\n\t\t\t\"name\": \"Astarta business center Block A (Yaroslavska Street, 58)\"\n\t\t}]\n\t},\n\t\"low_quality_network\": false,\n\t\"pedestrian_path_enabled\": false,\n\t\"ride_conditions\": [{\n\t\t\"name\": \"animal\",\n\t\t\"comment\": \"test\"\n\t}, {\n\t\t\"name\": \"silence\"\n\t}, {\n\t\t\"name\": \"english_speaker\"\n\t}, {\n\t\t\"name\": \"baggage\"\n\t}, {\n\t\t\"name\": \"non_smoker\"\n\t}],\n\t\"payment_method\": {\n\t\t\"id\": \"{{paymentMethodId}}\",\n\t\t\"type\": \"card\"\n\t}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{riderGatewayHost}}/api/v1/fare-estimate",
									"host": [
										"{{riderGatewayHost}}"
									],
									"path": [
										"api",
										"v1",
										"fare-estimate"
									]
								}
							},
							"response": []
						},
						{
							"name": "[Standart] Create Order",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{riderAuthToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "app_uid",
										"value": "{{appUid}}",
										"type": "text"
									},
									{
										"key": "client_id",
										"value": "{{clientId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"fare_id\": {{orderId}},\n\t\"product_type\": \"Standard\",\n\t\"product_conditions\": [],\n\t\"payment_method_id\": \"{{paymentMethodId}}\",\n\t\"comment\": \"Не телефонуйте мені, будь ласка\",\n\t\"use_pedestrian_path\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{riderGatewayHost}}/api/v1/orders",
									"host": [
										"{{riderGatewayHost}}"
									],
									"path": [
										"api",
										"v1",
										"orders"
									]
								}
							},
							"response": []
						}
					],
					"description": "https://app.qase.io/case/DRV-77"
				},
				{
					"name": "Order.Child",
					"item": [
						{
							"name": "Fare Estimate",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.sendRequest({",
											"    url: pm.environment.get(\"riderGatewayHost\") + '/api/v1/promo-codes/apply',",
											"    method: 'POST',",
											"    header: {",
											"        'Content-Type': 'application/json',",
											"        'app_uid': pm.environment.get(\"appUid\"),",
											"        'Authorization': `Bearer ${pm.environment.get(\"riderAuthToken\")}`,",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"            \"promo_code\": pm.environment.get(\"promoCodeName\")",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    if (err) {",
											"        console.log(\"Ошибка при запросе:\", err);",
											"    } else {",
											"        if (res.status === \"OK\") {",
											"            console.log(\"Запрос успешен. Код статуса:\", res.status);",
											"        } else {",
											"            console.log(\"Ошибка: неожиданный код статуса:\", res.status);",
											"        }",
											"    }",
											"});",
											"",
											"const fareId = pm.variables.replaceIn(\"{{$randomUUID}}\");",
											"pm.environment.set(\"orderId\", fareId);",
											"console.log(\"Сгенерированный fare_id:\", fareId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{riderAuthToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "app_uid",
										"value": "{{appUid}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"fare_id\": {{orderId}},\n\t\"include_route_info\": true,\n\t\"route\": {\n\t\t\"points\": [{\n\t\t\t\"lat\": 50.35162,\n\t\t\t\"lng\": 30.895992,\n\t\t\t\"name\": \"Аеропорт Бориспіль, Термінал Д Термінал Д\"\n\t\t}, {\n\t\t\t\"lat\": 50.44067,\n\t\t\t\"lng\": 30.48988,\n\t\t\t\"name\": \"Вокзальна площа, 1\"\n\t\t}]\n\t},\n\t\"low_quality_network\": false,\n\t\"pedestrian_path_enabled\": true,\n\t\"ride_conditions\": [],\n\t\"payment_method\": {\n\t\t\"id\": \"c53b2ef0eca04116bf0f43211f4259dd\",\n\t\t\"type\": \"card\"\n\t},\n    \"selected_options\": {\n\t\t\"extra_cost\": 500.0,\n\t\t\"product_type\": \"Kids\",\n\t\t\"is_alternative_cost_enabled\": false\n\t}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{riderGatewayHost}}/api/v1/fare-estimate",
									"host": [
										"{{riderGatewayHost}}"
									],
									"path": [
										"api",
										"v1",
										"fare-estimate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Estimate for adding point",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const fareId = pm.variables.replaceIn(\"{{$randomUUID}}\");",
											"pm.environment.set(\"changeRequestFareId\", fareId);",
											"console.log(\"Сгенерированный fare_id:\", fareId);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{riderAuthToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "app_uid",
										"value": "{{appUid}}",
										"type": "text"
									},
									{
										"key": "client_id",
										"value": "{{clientId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"fare_id\": {{changeRequestFareId}},\n\t\"order_route\": {\n\t\t\"points\": [{\n\t\t\t\"lat\": 50.35162,\n\t\t\t\"lng\": 30.895992,\n\t\t\t\"name\": \"Аеропорт Бориспіль, Термінал Д Термінал Д\"\n\t\t}, {\n\t\t\t\"lat\": 50.44067,\n\t\t\t\"lng\": 30.48988,\n\t\t\t\"name\": \"Вокзальна площа, 1\"\n\t\t},\n        {\n\t\t\t\"lat\": 50.35162,\n\t\t\t\"lng\": 30.895992,\n\t\t\t\"name\": \"Аеропорт Бориспіль, Термінал Д Термінал Д\"\n\t\t}]\n\t},\n\t\"ride_conditions\": [],\n\t\"payment_method\": {\n\t\t\"id\": \"c53b2ef0eca04116bf0f43211f4259dd\",\n\t\t\"type\": \"card\"\n\t}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{riderGatewayHost}}/api/v1/orders/{{orderId}}/estimates",
									"host": [
										"{{riderGatewayHost}}"
									],
									"path": [
										"api",
										"v1",
										"orders",
										"{{orderId}}",
										"estimates"
									]
								}
							},
							"response": []
						},
						{
							"name": "Apply changes",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{riderAuthToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "app_uid",
										"value": "{{appUid}}",
										"type": "text"
									},
									{
										"key": "client_id",
										"value": "{{clientId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fare_id\": {{changeRequestFareId}},\n  \"payment_method\": {\n    \"id\": \"c53b2ef0eca04116bf0f43211f4259dd\",\n    \"payment_type\": \"card\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{riderGatewayHost}}/api/v1/orders/{{orderId}}/apply-changes",
									"host": [
										"{{riderGatewayHost}}"
									],
									"path": [
										"api",
										"v1",
										"orders",
										"{{orderId}}",
										"apply-changes"
									]
								}
							},
							"response": []
						},
						{
							"name": "[Chair] Create Order",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{riderAuthToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "app_uid",
										"value": "{{appUid}}",
										"type": "text"
									},
									{
										"key": "client_id",
										"value": "{{clientId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"fare_id\": {{orderId}},\n\t\"product_type\": \"Kids\",\n\t\"product_conditions\": [\n         {\n            \"name\": \"car_seat_type\",\n            \"data\": \"forward_facing\"\n        }\n    ],\n\t\"payment_method_id\": \"c53b2ef0eca04116bf0f43211f4259dd\",\n\t\"comment\": \"\",\n\t\"use_pedestrian_path\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{riderGatewayHost}}/api/v1/orders",
									"host": [
										"{{riderGatewayHost}}"
									],
									"path": [
										"api",
										"v1",
										"orders"
									]
								}
							},
							"response": []
						},
						{
							"name": "[Booster] Create Order",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{riderAuthToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "app_uid",
										"value": "{{appUid}}",
										"type": "text"
									},
									{
										"key": "client_id",
										"value": "{{clientId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"fare_id\": {{orderId}},\n\t\"product_type\": \"Kids\",\n\t\"product_conditions\": [\n         {\n            \"name\": \"car_seat_type\",\n            \"data\": \"booster\"\n        }\n    ],\n\t\"payment_method_id\": \"c53b2ef0eca04116bf0f43211f4259dd\",\n\t\"comment\": \"\",\n\t\"use_pedestrian_path\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{riderGatewayHost}}/api/v1/orders",
									"host": [
										"{{riderGatewayHost}}"
									],
									"path": [
										"api",
										"v1",
										"orders"
									]
								}
							},
							"response": []
						}
					],
					"description": "https://app.qase.io/case/DRV-78"
				},
				{
					"name": "Order.Driver",
					"item": [
						{
							"name": "Fare Estimate",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const fareId = pm.variables.replaceIn(\"{{$randomUUID}}\");",
											"pm.environment.set(\"orderId\", fareId);",
											"console.log(\"Сгенерированный fare_id:\", fareId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{corporateRiderAuthToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "app_uid",
										"value": "{{appUid}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"fare_id\": {{orderId}},\n    \"include_route_info\": true,\n\t\"route\": {\n\t\t\"points\": [{\n\t\t\t\"lat\": 50.37571,\n\t\t\t\"lng\": 30.45267,\n\t\t\t\"name\": \"Композитора Лятошинського вулиця, 2\"\n\t\t}, {\n\t\t\t\"lat\": 50.38197,\n\t\t\t\"lng\": 30.47754,\n\t\t\t\"name\": \"Метро Виставковий Центр (у бік Іподрому) (Академіка Глушкова проспект)\"\n\t\t}]\n\t},\n\t\"low_quality_network\": false,\n\t\"pedestrian_path_enabled\": true,\n\t\"ride_conditions\": [],\n\t\"payment_method\": {\n\t\t\"id\": \"6a81c070bcdc4aa6814317a50b022e97\",\n\t\t\"type\": \"cash\"\n\t}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{riderGatewayHost}}/api/v1/fare-estimate",
									"host": [
										"{{riderGatewayHost}}"
									],
									"path": [
										"api",
										"v1",
										"fare-estimate"
									]
								}
							},
							"response": []
						},
						{
							"name": "[Driver] Create Order",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{corporateRiderAuthToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "app_uid",
										"value": "{{appUid}}",
										"type": "text"
									},
									{
										"key": "client_id",
										"value": "{{clientId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"fare_id\": {{orderId}},\n\t\"product_type\": \"Driver\",\n\t\"product_conditions\": [{\n\t\t\"name\": \"transmission_type\",\n\t\t\"data\": \"auto\"\n\t}],\n\t\"payment_method_id\": \"6a81c070bcdc4aa6814317a50b022e97\",\n\t\"comment\": \"\",\n\t\"use_pedestrian_path\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{riderGatewayHost}}/api/v1/orders",
									"host": [
										"{{riderGatewayHost}}"
									],
									"path": [
										"api",
										"v1",
										"orders"
									]
								}
							},
							"response": []
						}
					],
					"description": "[https://app.qase.io/case/DRV-79]()"
				},
				{
					"name": "Order.Wagon",
					"item": [
						{
							"name": "Fare Estimate",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const fareId = pm.variables.replaceIn(\"{{$randomUUID}}\");",
											"pm.environment.set(\"orderId\", fareId);",
											"console.log(\"Сгенерированный fare_id:\", fareId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{riderAuthToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "app_uid",
										"value": "{{appUid}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"fare_id\": {{orderId}},\n\t\"include_route_info\": true,\n\t\"route\": {\n\t\t\"points\": [{\n\t\t\t\"lat\": 50.37567,\n\t\t\t\"lng\": 30.45273,\n\t\t\t\"name\": \"Композитора Лятошинского улица, 2\"\n\t\t}, {\n\t\t\t\"lat\": 50.47233,\n\t\t\t\"lng\": 30.518827,\n\t\t\t\"name\": \"Бізнес-центр Astarta Блок А (Ярославська вулиця, 58)\"\n\t\t}]\n\t},\n\t\"low_quality_network\": false,\n\t\"pedestrian_path_enabled\": true,\n\t\"ride_conditions\": [],\n\t\"payment_method\": {\n\t\t\"id\": \"6a81c070bcdc4aa6814317a50b022e97\",\n\t\t\"type\": \"cash\"\n\t}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{riderGatewayHost}}/api/v1/fare-estimate",
									"host": [
										"{{riderGatewayHost}}"
									],
									"path": [
										"api",
										"v1",
										"fare-estimate"
									]
								}
							},
							"response": []
						},
						{
							"name": "[Wagon] Create Order",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{riderAuthToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "app_uid",
										"value": "{{appUid}}",
										"type": "text"
									},
									{
										"key": "client_id",
										"value": "{{clientId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"fare_id\": {{orderId}},\n\t\"product_type\": \"Wagon\",\n\t\"product_conditions\": [],\n\t\"payment_method_id\": \"6a81c070bcdc4aa6814317a50b022e97\",\n\t\"comment\": \"\",\n\t\"use_pedestrian_path\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{riderGatewayHost}}/api/v1/orders",
									"host": [
										"{{riderGatewayHost}}"
									],
									"path": [
										"api",
										"v1",
										"orders"
									]
								}
							},
							"response": []
						}
					],
					"description": "https://app.qase.io/case/DRV-79"
				},
				{
					"name": "OrdersByPaymentType",
					"item": [
						{
							"name": "CashOrders",
							"item": [
								{
									"name": "[Standart+Cash]",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const fareId = pm.variables.replaceIn(\"{{$randomUUID}}\");",
													"pm.environment.set(\"orderId\", fareId);",
													"console.log(\"Сгенерированный fare_id:\", fareId);",
													"",
													"",
													"let payload = JSON.parse(pm.environment.get(\"fareEstimatePayloadBase\"));",
													"",
													"payload.fare_id = fareId;",
													"",
													"pm.sendRequest({",
													"  url: pm.environment.get(\"riderGatewayHost\") + \"/api/v1/fare-estimate\",",
													"  method: \"POST\",",
													"  header: {",
													"    \"Content-Type\": \"application/json\",",
													"    \"app_uid\": pm.environment.get(\"appUid\"),",
													"    \"Authorization\": pm.environment.get(\"auth_token\")",
													"  },",
													"  body: {",
													"    mode: \"raw\",",
													"    raw: JSON.stringify(payload)",
													"  }",
													"}, function (err, res) {",
													"  if (err) return console.error(\"Error:\", err);",
													"  pm.environment.set(\"fareEstimate\", JSON.stringify(res.json()));",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{riderAuthToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Host",
												"value": "rider.dev.uklon.com.ua",
												"type": "text"
											},
											{
												"key": "user-agent",
												"value": "UklonAndroid/78200",
												"type": "text"
											},
											{
												"key": "x-fp",
												"value": "E164",
												"type": "text"
											},
											{
												"key": "app_uid",
												"value": "{{appUid}}",
												"type": "text"
											},
											{
												"key": "client_id",
												"value": "{{clientId}}",
												"type": "text"
											},
											{
												"key": "device_name",
												"value": "Xiaomi/Redmi Note 9 Pro",
												"type": "text"
											},
											{
												"key": "app_version",
												"value": "7.82.0.697812",
												"type": "text"
											},
											{
												"key": "locale",
												"value": "ru",
												"type": "text"
											},
											{
												"key": "city",
												"value": "kyiv",
												"type": "text"
											},
											{
												"key": "content-type",
												"value": "application/json; charset=UTF-8",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"fare_id\": {{orderId}},\n\t\"product_type\": \"Standard\",\n\t\"product_conditions\": [],\n\t\"payment_method_id\": \"{{cashPaymentMethodId}}\",\n\t\"comment\": \"Не телефонуйте мені, будь ласка\",\n\t\"use_pedestrian_path\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{riderGatewayHost}}/api/v1/orders",
											"host": [
												"{{riderGatewayHost}}"
											],
											"path": [
												"api",
												"v1",
												"orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Standart+Cash+Debt+Promo]",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const generatedFareId = pm.variables.replaceIn(\"{{$randomUUID}}\");",
													"pm.environment.set(\"orderId\", generatedFareId);",
													"console.log(\"Сгенерированный fare_id:\", generatedFareId);",
													"",
													"// ====================================================================================",
													"// ПЕРШИЙ ЗАПИТ: Нарахування боргу (wallet-payments/charge)",
													"// ====================================================================================",
													"pm.sendRequest({",
													"    url: pm.environment.get(\"paymentProcessorHost\") + '/api/v1/riders/' + pm.environment.get(\"riderId\") + '/wallet-payments/charge',",
													"    method: 'POST',",
													"    header: {",
													"        'Content-Type': 'application/json',",
													"        'accept': '*/*',",
													"        'Authorization': `Bearer ${pm.environment.get(\"adminAuthToken\")}` ",
													"    },",
													"    body: {",
													"        mode: 'raw',",
													"        raw: JSON.stringify({",
													"            \"amount\": {",
													"                \"amount\": 50,",
													"                \"currency\": \"UAH\"",
													"            },",
													"            \"order_id\": \"589f5b9f-4179-4799-9289-c2ef0c43ccc8\",",
													"            \"description\": \"test_charge_from_postman\",",
													"            \"initiated_by_user_id\": pm.environment.get(\"riderId\"),",
													"            \"region_id\": pm.environment.get(\"regionId\"),",
													"            \"profit_loss_type\": \"rider_penalty_other\",",
													"            \"vb_type\": \"rdr_penalties\"",
													"        })",
													"    }",
													"}, function (err, res) {",
													"    if (err) {",
													"        console.error(\"Помилка нарахування боргу на гаманець:\", err);",
													"        return; // Зупиняємо виконання, якщо перший запит провалився",
													"    }",
													"    if (res.code == 204 && res.code < 300) {",
													"        console.log(\"success. Код:\", res.code);",
													"    }",
													"",
													"    // ====================================================================================",
													"    // ДРУГИЙ ЗАПИТ: Застосування промокоду (promo-codes/apply)",
													"    // Виконується ТІЛЬКИ після успішного поповнення гаманця",
													"    // ====================================================================================",
													"    pm.sendRequest({",
													"        url: pm.environment.get(\"riderGatewayHost\") + '/api/v1/promo-codes/apply',",
													"        method: 'POST',",
													"        header: {",
													"            'Content-Type': 'application/json',",
													"            'app_uid': pm.environment.get(\"appUid\"),",
													"            'Authorization': `Bearer ${pm.environment.get(\"riderAuthToken\")}`,",
													"        },",
													"        body: {",
													"            mode: 'raw',",
													"            raw: JSON.stringify({",
													"                \"promo_code\": pm.environment.get(\"promoCodeName\")",
													"            })",
													"        }",
													"    }, function (err, res) {",
													"        if (err) {",
													"            console.error(\"Помилка додавання промо:\", err);",
													"            return; // Зупиняємо виконання, якщо другий запит провалився",
													"        }",
													"",
													"        if (res.code >= 200 && res.code < 300) {",
													"            console.log(\"success. Код:\", res.code);",
													"        } else {",
													"            console.error(\"Помилка додавання промо: Код:\", res.code, res.json());",
													"            return; // Зупиняємо виконання, якщо другий запит не успішний за статусом",
													"        }",
													"",
													"        // ====================================================================================",
													"        // ТРЕТІЙ ЗАПИТ: Розрахунок вартості (fare-estimate)",
													"        // Виконується ТІЛЬКИ після успішного поповнення гаманця та застосування промокоду",
													"        // ====================================================================================",
													"        let payload = JSON.parse(pm.environment.get(\"fareEstimatePayloadBase\"));",
													"        payload.fare_id = generatedFareId; // Використовуємо згенерований на початку fareId",
													"",
													"        pm.sendRequest({",
													"          url: pm.environment.get(\"riderGatewayHost\") + \"/api/v1/fare-estimate\",",
													"          method: \"POST\",",
													"          header: {",
													"            \"Content-Type\": \"application/json\",",
													"            \"app_uid\": pm.environment.get(\"appUid\"),",
													"            \"Authorization\": `Bearer ${pm.environment.get(\"riderAuthToken\")}`",
													"          },",
													"          body: {",
													"            mode: \"raw\",",
													"            raw: JSON.stringify(payload)",
													"          }",
													"        }, function (err, res) {",
													"          if (err) {",
													"            console.error(\"Ошибка при запросе fare-estimate:\", err);",
													"            return;",
													"          }",
													"",
													"          if (res.code >= 200 && res.code < 300) {",
													"              pm.environment.set(\"fareEstimate\", JSON.stringify(res.json()));",
													"              console.log(\"Fare estimate успешно получен. Ответ:\", res.json());",
													"          } else {",
													"              console.error(\"Ошибка fare-estimate: неожиданный код статуса:\", res.code, res.json());",
													"          }",
													"        });",
													"",
													"    });",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{riderAuthToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Host",
												"value": "rider.dev.uklon.com.ua",
												"type": "text"
											},
											{
												"key": "user-agent",
												"value": "UklonAndroid/78200",
												"type": "text"
											},
											{
												"key": "x-fp",
												"value": "E164",
												"type": "text"
											},
											{
												"key": "app_uid",
												"value": "d211bc2a-e563-340b-bd8d-b2f95960bc0c",
												"type": "text"
											},
											{
												"key": "client_id",
												"value": "8b7b4c21cb5b43d68ac8fd7dafb96bc7",
												"type": "text"
											},
											{
												"key": "device_name",
												"value": "Xiaomi/Redmi Note 9 Pro",
												"type": "text"
											},
											{
												"key": "app_version",
												"value": "7.82.0.697812",
												"type": "text"
											},
											{
												"key": "locale",
												"value": "ru",
												"type": "text"
											},
											{
												"key": "city",
												"value": "kyiv",
												"type": "text"
											},
											{
												"key": "authorization",
												"value": "Bearer eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNyc2Etc2hhMzg0IiwidHlwIjoiSldUIn0.eyJqdGkiOiI2OTViODg1Nzg1OGQ0OGMzYWRkMGU2NDA5ODJiM2IyNyIsInVuaXF1ZV9uYW1lIjoiMzgwOTM1NTEzODMzIiwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvd3MvMjAwNS8wNS9pZGVudGl0eS9jbGFpbXMvbmFtZSI6IjM4MDkzNTUxMzgzMyIsIm5hbWVpZCI6IjMzMTc4NzU0LTZiYWItNDY0NC05NWJiLWM4NzBiNTRkZmNiYiIsImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL25hbWVpZGVudGlmaWVyIjoiMzMxNzg3NTQtNmJhYi00NjQ0LTk1YmItYzg3MGI1NGRmY2JiIiwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvd3MvMjAwNS8wNS9pZGVudGl0eS9jbGFpbXMvbW9iaWxlcGhvbmUiOiIzODA5MzU1MTM4MzMiLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9sb2NhbGl0eSI6IjEiLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL2dyb3Vwc2lkIjoiWWF6NUlzanJ3WFkzRGZ2c1hSQ0JWSEozUWJnQXYvV0dYSEhZMzV2VzMyTT0iLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9lbWFpbGFkZHJlc3MiOiJkQGdtYWlsLmNvbSIsImVtYWlsIjoiZEBnbWFpbC5jb20iLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3JvbGUiOlsiTW9kZXJhdG9yIiwiUXVhbGl0eUFnZW50IiwiQWRtaW5pc3RyYXRvciJdLCJuYmYiOjE3NDg5NjIxNDcsImV4cCI6MTc0ODk2NTc0NywiaWF0IjoxNzQ4OTYyMTQ3LCJpc3MiOiJodHRwczovL25vbnByb2QudWtsb24uY29tLnVhLyIsImF1ZCI6Imh0dHBzOi8vbm9ucHJvZC51a2xvbi5jb20udWEvIiwicHJvcGVydGllcyI6eyJkZXZpY2VfaWQiOiJkMjExYmMyYS1lNTYzLTM0MGItYmQ4ZC1iMmY5NTk2MGJjMGMiLCJhcHBfdWlkIjoiZDIxMWJjMmEtZTU2My0zNDBiLWJkOGQtYjJmOTU5NjBiYzBjIiwiY2xpZW50X2lkIjoiOGI3YjRjMjFjYjViNDNkNjhhYzhmZDdkYWZiOTZiYzciLCJzb3VyY2UiOiJJZGVudGl0eTIifX0.eTgl8zdhcCm6GIe118AWSpf7JUifuWUKTyEgyChqBlI-YqwFs1KfKySm2_77QGAwYDPwqdopr7zPUQTKQAcTX3jn_YSjuNdVA1VkOcjN8FabzNAWvSIcdoYAdTFg_sUuv10SG3QdP0X8eSY7BG5Sc4DUrOcVY-J3D4g3VZttE5nqptwu9JWdIgmYKUuQBVwVEtdTLmkyYKgx_Es0ylC7lHQCmGQi2qa37Q-utXbhOjq43JVBNwRUecnSekKufL_VQww-cQk_-wOPyVM2Mqmy6leZsu1hKWfvLXbJSTVcMptPOEIK-bAbT2CjZGIktadD3ruK1zVDCojltf6I_3y36g",
												"type": "text"
											},
											{
												"key": "content-type",
												"value": "application/json; charset=UTF-8",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"fare_id\": {{orderId}},\n\t\"product_type\": \"Standard\",\n\t\"product_conditions\": [],\n\t\"payment_method_id\": \"{{cashPaymentMethodId}}\",\n\t\"comment\": \"Не телефонуйте мені, будь ласка\",\n\t\"use_pedestrian_path\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{riderGatewayHost}}/api/v1/orders",
											"host": [
												"{{riderGatewayHost}}"
											],
											"path": [
												"api",
												"v1",
												"orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Standart+Cash+Promo]",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const generatedFareId = pm.variables.replaceIn(\"{{$randomUUID}}\");",
													"pm.environment.set(\"orderId\", generatedFareId);",
													"console.log(\"Сгенерированный fare_id:\", generatedFareId);",
													"",
													"    pm.sendRequest({",
													"        url: pm.environment.get(\"riderGatewayHost\") + '/api/v1/promo-codes/apply',",
													"        method: 'POST',",
													"        header: {",
													"            'Content-Type': 'application/json',",
													"            'app_uid': pm.environment.get(\"appUid\"),",
													"            'Authorization': `Bearer ${pm.environment.get(\"riderAuthToken\")}`,",
													"        },",
													"        body: {",
													"            mode: 'raw',",
													"            raw: JSON.stringify({",
													"                \"promo_code\": pm.environment.get(\"promoCodeName\")",
													"            })",
													"        }",
													"    }, function (err, res) {",
													"        if (err) {",
													"            console.error(\"Помилка додавання промо:\", err);",
													"            return; ",
													"        }",
													"",
													"        if (res.code >= 200 && res.code < 300) {",
													"            console.log(\"success. Код:\", res.code);",
													"        } else {",
													"            console.error(\"Помилка додавання промо: Код:\", res.code, res.json());",
													"            return; ",
													"        }",
													"",
													"        let payload = JSON.parse(pm.environment.get(\"fareEstimatePayloadBase\"));",
													"        payload.fare_id = generatedFareId; ",
													"",
													"        pm.sendRequest({",
													"          url: pm.environment.get(\"riderGatewayHost\") + \"/api/v1/fare-estimate\",",
													"          method: \"POST\",",
													"          header: {",
													"            \"Content-Type\": \"application/json\",",
													"            \"app_uid\": pm.environment.get(\"appUid\"),",
													"            \"Authorization\": `Bearer ${pm.environment.get(\"riderAuthToken\")}`",
													"          },",
													"          body: {",
													"            mode: \"raw\",",
													"            raw: JSON.stringify(payload)",
													"          }",
													"        }, function (err, res) {",
													"          if (err) {",
													"            console.error(\"Ошибка при запросе fare-estimate:\", err);",
													"            return;",
													"          }",
													"",
													"          if (res.code >= 200 && res.code < 300) {",
													"              pm.environment.set(\"fareEstimate\", JSON.stringify(res.json()));",
													"              console.log(\"Fare estimate успешно получен. Ответ:\", res.json());",
													"          } else {",
													"              console.error(\"Ошибка fare-estimate: неожиданный код статуса:\", res.code, res.json());",
													"          }",
													"        });",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{riderAuthToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Host",
												"value": "rider.dev.uklon.com.ua",
												"type": "text"
											},
											{
												"key": "user-agent",
												"value": "UklonAndroid/78200",
												"type": "text"
											},
											{
												"key": "x-fp",
												"value": "E164",
												"type": "text"
											},
											{
												"key": "app_uid",
												"value": "d211bc2a-e563-340b-bd8d-b2f95960bc0c",
												"type": "text"
											},
											{
												"key": "client_id",
												"value": "8b7b4c21cb5b43d68ac8fd7dafb96bc7",
												"type": "text"
											},
											{
												"key": "device_name",
												"value": "Xiaomi/Redmi Note 9 Pro",
												"type": "text"
											},
											{
												"key": "app_version",
												"value": "7.82.0.697812",
												"type": "text"
											},
											{
												"key": "locale",
												"value": "ru",
												"type": "text"
											},
											{
												"key": "city",
												"value": "kyiv",
												"type": "text"
											},
											{
												"key": "authorization",
												"value": "Bearer eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNyc2Etc2hhMzg0IiwidHlwIjoiSldUIn0.eyJqdGkiOiI2OTViODg1Nzg1OGQ0OGMzYWRkMGU2NDA5ODJiM2IyNyIsInVuaXF1ZV9uYW1lIjoiMzgwOTM1NTEzODMzIiwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvd3MvMjAwNS8wNS9pZGVudGl0eS9jbGFpbXMvbmFtZSI6IjM4MDkzNTUxMzgzMyIsIm5hbWVpZCI6IjMzMTc4NzU0LTZiYWItNDY0NC05NWJiLWM4NzBiNTRkZmNiYiIsImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL25hbWVpZGVudGlmaWVyIjoiMzMxNzg3NTQtNmJhYi00NjQ0LTk1YmItYzg3MGI1NGRmY2JiIiwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvd3MvMjAwNS8wNS9pZGVudGl0eS9jbGFpbXMvbW9iaWxlcGhvbmUiOiIzODA5MzU1MTM4MzMiLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9sb2NhbGl0eSI6IjEiLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL2dyb3Vwc2lkIjoiWWF6NUlzanJ3WFkzRGZ2c1hSQ0JWSEozUWJnQXYvV0dYSEhZMzV2VzMyTT0iLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9lbWFpbGFkZHJlc3MiOiJkQGdtYWlsLmNvbSIsImVtYWlsIjoiZEBnbWFpbC5jb20iLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3JvbGUiOlsiTW9kZXJhdG9yIiwiUXVhbGl0eUFnZW50IiwiQWRtaW5pc3RyYXRvciJdLCJuYmYiOjE3NDg5NjIxNDcsImV4cCI6MTc0ODk2NTc0NywiaWF0IjoxNzQ4OTYyMTQ3LCJpc3MiOiJodHRwczovL25vbnByb2QudWtsb24uY29tLnVhLyIsImF1ZCI6Imh0dHBzOi8vbm9ucHJvZC51a2xvbi5jb20udWEvIiwicHJvcGVydGllcyI6eyJkZXZpY2VfaWQiOiJkMjExYmMyYS1lNTYzLTM0MGItYmQ4ZC1iMmY5NTk2MGJjMGMiLCJhcHBfdWlkIjoiZDIxMWJjMmEtZTU2My0zNDBiLWJkOGQtYjJmOTU5NjBiYzBjIiwiY2xpZW50X2lkIjoiOGI3YjRjMjFjYjViNDNkNjhhYzhmZDdkYWZiOTZiYzciLCJzb3VyY2UiOiJJZGVudGl0eTIifX0.eTgl8zdhcCm6GIe118AWSpf7JUifuWUKTyEgyChqBlI-YqwFs1KfKySm2_77QGAwYDPwqdopr7zPUQTKQAcTX3jn_YSjuNdVA1VkOcjN8FabzNAWvSIcdoYAdTFg_sUuv10SG3QdP0X8eSY7BG5Sc4DUrOcVY-J3D4g3VZttE5nqptwu9JWdIgmYKUuQBVwVEtdTLmkyYKgx_Es0ylC7lHQCmGQi2qa37Q-utXbhOjq43JVBNwRUecnSekKufL_VQww-cQk_-wOPyVM2Mqmy6leZsu1hKWfvLXbJSTVcMptPOEIK-bAbT2CjZGIktadD3ruK1zVDCojltf6I_3y36g",
												"type": "text"
											},
											{
												"key": "content-type",
												"value": "application/json; charset=UTF-8",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"fare_id\": {{orderId}},\n\t\"product_type\": \"Standard\",\n\t\"product_conditions\": [],\n\t\"payment_method_id\": \"{{cashPaymentMethodId}}\",\n\t\"comment\": \"Не телефонуйте мені, будь ласка\",\n\t\"use_pedestrian_path\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{riderGatewayHost}}/api/v1/orders",
											"host": [
												"{{riderGatewayHost}}"
											],
											"path": [
												"api",
												"v1",
												"orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Standart+Cash+Debt]",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const generatedFareId = pm.variables.replaceIn(\"{{$randomUUID}}\");",
													"pm.environment.set(\"orderId\", generatedFareId);",
													"console.log(\"Сгенерированный fare_id:\", generatedFareId);",
													"",
													"// ====================================================================================",
													"// ПЕРШИЙ ЗАПИТ: Нарахування боргу (wallet-payments/charge)",
													"// ====================================================================================",
													"pm.sendRequest({",
													"    url: pm.environment.get(\"paymentProcessorHost\") + '/api/v1/riders/' + pm.environment.get(\"riderId\") + '/wallet-payments/charge',",
													"    method: 'POST',",
													"    header: {",
													"        'Content-Type': 'application/json',",
													"        'accept': '*/*',",
													"        'Authorization': `Bearer ${pm.environment.get(\"adminAuthToken\")}` ",
													"    },",
													"    body: {",
													"        mode: 'raw',",
													"        raw: JSON.stringify({",
													"            \"amount\": {",
													"                \"amount\": 50,",
													"                \"currency\": \"UAH\"",
													"            },",
													"            \"order_id\": \"589f5b9f-4179-4799-9289-c2ef0c43ccc8\",",
													"            \"description\": \"test_charge_from_postman\",",
													"            \"initiated_by_user_id\": pm.environment.get(\"riderId\"),",
													"            \"region_id\": pm.environment.get(\"regionId\"),",
													"            \"profit_loss_type\": \"rider_penalty_other\",",
													"            \"vb_type\": \"rdr_penalties\"",
													"        })",
													"    }",
													"}, function (err, res) {",
													"    if (err) {",
													"        console.error(\"Помилка нарахування боргу на гаманець:\", err);",
													"        return; // Зупиняємо виконання, якщо перший запит провалився",
													"    }",
													"    if (res.code == 204 && res.code < 300) {",
													"        console.log(\"success. Код:\", res.code);",
													"    }",
													"",
													"        // ====================================================================================",
													"        // ТРЕТІЙ ЗАПИТ: Розрахунок вартості (fare-estimate)",
													"        // Виконується ТІЛЬКИ після успішного поповнення гаманця та застосування промокоду",
													"        // ====================================================================================",
													"        let payload = JSON.parse(pm.environment.get(\"fareEstimatePayloadBase\"));",
													"        payload.fare_id = generatedFareId; // Використовуємо згенерований на початку fareId",
													"",
													"        pm.sendRequest({",
													"          url: pm.environment.get(\"riderGatewayHost\") + \"/api/v1/fare-estimate\",",
													"          method: \"POST\",",
													"          header: {",
													"            \"Content-Type\": \"application/json\",",
													"            \"app_uid\": pm.environment.get(\"appUid\"),",
													"            \"Authorization\": `Bearer ${pm.environment.get(\"riderAuthToken\")}`",
													"          },",
													"          body: {",
													"            mode: \"raw\",",
													"            raw: JSON.stringify(payload)",
													"          }",
													"        }, function (err, res) {",
													"          if (err) {",
													"            console.error(\"Ошибка при запросе fare-estimate:\", err);",
													"            return;",
													"          }",
													"",
													"          if (res.code >= 200 && res.code < 300) {",
													"              pm.environment.set(\"fareEstimate\", JSON.stringify(res.json()));",
													"              console.log(\"Fare estimate успешно получен. Ответ:\", res.json());",
													"          } else {",
													"              console.error(\"Ошибка fare-estimate: неожиданный код статуса:\", res.code, res.json());",
													"          }",
													"        });",
													"    });"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{riderAuthToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Host",
												"value": "rider.dev.uklon.com.ua"
											},
											{
												"key": "user-agent",
												"value": "UklonAndroid/78200"
											},
											{
												"key": "x-fp",
												"value": "E164"
											},
											{
												"key": "app_uid",
												"value": "d211bc2a-e563-340b-bd8d-b2f95960bc0c"
											},
											{
												"key": "client_id",
												"value": "8b7b4c21cb5b43d68ac8fd7dafb96bc7"
											},
											{
												"key": "device_name",
												"value": "Xiaomi/Redmi Note 9 Pro"
											},
											{
												"key": "app_version",
												"value": "7.82.0.697812"
											},
											{
												"key": "locale",
												"value": "ru"
											},
											{
												"key": "city",
												"value": "kyiv"
											},
											{
												"key": "authorization",
												"value": "Bearer eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNyc2Etc2hhMzg0IiwidHlwIjoiSldUIn0.eyJqdGkiOiI2OTViODg1Nzg1OGQ0OGMzYWRkMGU2NDA5ODJiM2IyNyIsInVuaXF1ZV9uYW1lIjoiMzgwOTM1NTEzODMzIiwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvd3MvMjAwNS8wNS9pZGVudGl0eS9jbGFpbXMvbmFtZSI6IjM4MDkzNTUxMzgzMyIsIm5hbWVpZCI6IjMzMTc4NzU0LTZiYWItNDY0NC05NWJiLWM4NzBiNTRkZmNiYiIsImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL25hbWVpZGVudGlmaWVyIjoiMzMxNzg3NTQtNmJhYi00NjQ0LTk1YmItYzg3MGI1NGRmY2JiIiwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvd3MvMjAwNS8wNS9pZGVudGl0eS9jbGFpbXMvbW9iaWxlcGhvbmUiOiIzODA5MzU1MTM4MzMiLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9sb2NhbGl0eSI6IjEiLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL2dyb3Vwc2lkIjoiWWF6NUlzanJ3WFkzRGZ2c1hSQ0JWSEozUWJnQXYvV0dYSEhZMzV2VzMyTT0iLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9lbWFpbGFkZHJlc3MiOiJkQGdtYWlsLmNvbSIsImVtYWlsIjoiZEBnbWFpbC5jb20iLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3JvbGUiOlsiTW9kZXJhdG9yIiwiUXVhbGl0eUFnZW50IiwiQWRtaW5pc3RyYXRvciJdLCJuYmYiOjE3NDg5NjIxNDcsImV4cCI6MTc0ODk2NTc0NywiaWF0IjoxNzQ4OTYyMTQ3LCJpc3MiOiJodHRwczovL25vbnByb2QudWtsb24uY29tLnVhLyIsImF1ZCI6Imh0dHBzOi8vbm9ucHJvZC51a2xvbi5jb20udWEvIiwicHJvcGVydGllcyI6eyJkZXZpY2VfaWQiOiJkMjExYmMyYS1lNTYzLTM0MGItYmQ4ZC1iMmY5NTk2MGJjMGMiLCJhcHBfdWlkIjoiZDIxMWJjMmEtZTU2My0zNDBiLWJkOGQtYjJmOTU5NjBiYzBjIiwiY2xpZW50X2lkIjoiOGI3YjRjMjFjYjViNDNkNjhhYzhmZDdkYWZiOTZiYzciLCJzb3VyY2UiOiJJZGVudGl0eTIifX0.eTgl8zdhcCm6GIe118AWSpf7JUifuWUKTyEgyChqBlI-YqwFs1KfKySm2_77QGAwYDPwqdopr7zPUQTKQAcTX3jn_YSjuNdVA1VkOcjN8FabzNAWvSIcdoYAdTFg_sUuv10SG3QdP0X8eSY7BG5Sc4DUrOcVY-J3D4g3VZttE5nqptwu9JWdIgmYKUuQBVwVEtdTLmkyYKgx_Es0ylC7lHQCmGQi2qa37Q-utXbhOjq43JVBNwRUecnSekKufL_VQww-cQk_-wOPyVM2Mqmy6leZsu1hKWfvLXbJSTVcMptPOEIK-bAbT2CjZGIktadD3ruK1zVDCojltf6I_3y36g"
											},
											{
												"key": "content-type",
												"value": "application/json; charset=UTF-8"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"fare_id\": \"{{orderId}}\",\n    \"product_type\": \"Standard\",\n    \"product_conditions\": [],\n    \"payment_method_id\": \"{{cashPaymentMethodId}}\",\n    \"comment\": \"Не звоните мне, пожалуйста\",\n    \"use_pedestrian_path\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{riderGatewayHost}}/api/v1/orders",
											"host": [
												"{{riderGatewayHost}}"
											],
											"path": [
												"api",
												"v1",
												"orders"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "CashlessOrders",
							"item": [
								{
									"name": "[Standart+Cashless]",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const fareId = pm.variables.replaceIn(\"{{$randomUUID}}\");",
													"pm.environment.set(\"orderId\", fareId);",
													"console.log(\"Сгенерированный fare_id:\", fareId);",
													"",
													"pm.sendRequest({",
													"    url: pm.environment.get(\"riderGatewayHost\") + \"/api/v1/payment-methods\",",
													"    method: 'GET',",
													"    header: {",
													"        'Content-Type': 'application/json',",
													"        'app_uid': pm.environment.get(\"appUid\"),",
													"        'Authorization': `Bearer ${pm.environment.get(\"riderAuthToken\")}`,",
													"    }",
													"}, function (err, res) {",
													"    if (err) {",
													"        console.log(\"Request to payment-methods failed\", err);",
													"        return; // Вийти, якщо перший запит не вдався",
													"    }",
													"",
													"    const json = res.json();",
													"",
													"    if (json.last_used && json.last_used.id) {",
													"        pm.environment.set(\"lastUsedPaymentId\", json.last_used.id);",
													"    }",
													"",
													"    if (Array.isArray(json.payment_methods)) {",
													"        const firstCard = json.payment_methods.find(method => method.payment_type === \"card\");",
													"        if (firstCard && firstCard.id) {",
													"            pm.environment.set(\"paymentMethodId\", firstCard.id);",
													"",
													"            let payload = JSON.parse(pm.environment.get(\"fareEstimatePayloadBase\"));",
													"",
													"            payload.fare_id = fareId;",
													"            payload.payment_method.type = \"card\";",
													"            payload.payment_method.id = pm.environment.get(\"paymentMethodId\");",
													"",
													"            pm.sendRequest({",
													"              url: pm.environment.get(\"riderGatewayHost\") + \"/api/v1/fare-estimate\",",
													"              method: \"POST\",",
													"              header: {",
													"                \"Content-Type\": \"application/json\",",
													"                \"app_uid\": pm.environment.get(\"appUid\"),",
													"                \"Authorization\": `Bearer ${pm.environment.get(\"riderAuthToken\")}`",
													"              },",
													"              body: {",
													"                mode: \"raw\",",
													"                raw: JSON.stringify(payload)",
													"              }",
													"            }, function (err, res) {",
													"              if (err) {",
													"                console.error(\"Error sending fare-estimate request:\", err);",
													"                return;",
													"              }",
													"              if (res.code >= 200 && res.code < 300) {",
													"                  pm.environment.set(\"fareEstimate\", JSON.stringify(res.json()));",
													"                  console.log(\"Fare estimate response set:\", res.json());",
													"              } else {",
													"                  console.error(\"Fare estimate request failed with status:\", res.code, res.json());",
													"              }",
													"            });",
													"",
													"        } else {",
													"            console.log(\"No card payment method found.\");",
													"        }",
													"    } else {",
													"        console.log(\"payment_methods is not an array or is empty.\");",
													"    }",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{riderAuthToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Host",
												"value": "rider.dev.uklon.com.ua",
												"type": "text"
											},
											{
												"key": "user-agent",
												"value": "UklonAndroid/78200",
												"type": "text"
											},
											{
												"key": "x-fp",
												"value": "E164",
												"type": "text"
											},
											{
												"key": "app_uid",
												"value": "d211bc2a-e563-340b-bd8d-b2f95960bc0c",
												"type": "text"
											},
											{
												"key": "client_id",
												"value": "8b7b4c21cb5b43d68ac8fd7dafb96bc7",
												"type": "text"
											},
											{
												"key": "device_name",
												"value": "Xiaomi/Redmi Note 9 Pro",
												"type": "text"
											},
											{
												"key": "app_version",
												"value": "7.82.0.697812",
												"type": "text"
											},
											{
												"key": "locale",
												"value": "ru",
												"type": "text"
											},
											{
												"key": "city",
												"value": "kyiv",
												"type": "text"
											},
											{
												"key": "authorization",
												"value": "Bearer eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNyc2Etc2hhMzg0IiwidHlwIjoiSldUIn0.eyJqdGkiOiI2OTViODg1Nzg1OGQ0OGMzYWRkMGU2NDA5ODJiM2IyNyIsInVuaXF1ZV9uYW1lIjoiMzgwOTM1NTEzODMzIiwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvd3MvMjAwNS8wNS9pZGVudGl0eS9jbGFpbXMvbmFtZSI6IjM4MDkzNTUxMzgzMyIsIm5hbWVpZCI6IjMzMTc4NzU0LTZiYWItNDY0NC05NWJiLWM4NzBiNTRkZmNiYiIsImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL25hbWVpZGVudGlmaWVyIjoiMzMxNzg3NTQtNmJhYi00NjQ0LTk1YmItYzg3MGI1NGRmY2JiIiwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvd3MvMjAwNS8wNS9pZGVudGl0eS9jbGFpbXMvbW9iaWxlcGhvbmUiOiIzODA5MzU1MTM4MzMiLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9sb2NhbGl0eSI6IjEiLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL2dyb3Vwc2lkIjoiWWF6NUlzanJ3WFkzRGZ2c1hSQ0JWSEozUWJnQXYvV0dYSEhZMzV2VzMyTT0iLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9lbWFpbGFkZHJlc3MiOiJkQGdtYWlsLmNvbSIsImVtYWlsIjoiZEBnbWFpbC5jb20iLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3JvbGUiOlsiTW9kZXJhdG9yIiwiUXVhbGl0eUFnZW50IiwiQWRtaW5pc3RyYXRvciJdLCJuYmYiOjE3NDg5NjIxNDcsImV4cCI6MTc0ODk2NTc0NywiaWF0IjoxNzQ4OTYyMTQ3LCJpc3MiOiJodHRwczovL25vbnByb2QudWtsb24uY29tLnVhLyIsImF1ZCI6Imh0dHBzOi8vbm9ucHJvZC51a2xvbi5jb20udWEvIiwicHJvcGVydGllcyI6eyJkZXZpY2VfaWQiOiJkMjExYmMyYS1lNTYzLTM0MGItYmQ4ZC1iMmY5NTk2MGJjMGMiLCJhcHBfdWlkIjoiZDIxMWJjMmEtZTU2My0zNDBiLWJkOGQtYjJmOTU5NjBiYzBjIiwiY2xpZW50X2lkIjoiOGI3YjRjMjFjYjViNDNkNjhhYzhmZDdkYWZiOTZiYzciLCJzb3VyY2UiOiJJZGVudGl0eTIifX0.eTgl8zdhcCm6GIe118AWSpf7JUifuWUKTyEgyChqBlI-YqwFs1KfKySm2_77QGAwYDPwqdopr7zPUQTKQAcTX3jn_YSjuNdVA1VkOcjN8FabzNAWvSIcdoYAdTFg_sUuv10SG3QdP0X8eSY7BG5Sc4DUrOcVY-J3D4g3VZttE5nqptwu9JWdIgmYKUuQBVwVEtdTLmkyYKgx_Es0ylC7lHQCmGQi2qa37Q-utXbhOjq43JVBNwRUecnSekKufL_VQww-cQk_-wOPyVM2Mqmy6leZsu1hKWfvLXbJSTVcMptPOEIK-bAbT2CjZGIktadD3ruK1zVDCojltf6I_3y36g",
												"type": "text"
											},
											{
												"key": "content-type",
												"value": "application/json; charset=UTF-8",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"fare_id\": {{orderId}},\n\t\"product_type\": \"Standard\",\n\t\"product_conditions\": [],\n\t\"payment_method_id\": \"{{cashPaymentMethodId}}\",\n\t\"comment\": \"Не телефонуйте мені, будь ласка\",\n\t\"use_pedestrian_path\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{riderGatewayHost}}/api/v1/orders",
											"host": [
												"{{riderGatewayHost}}"
											],
											"path": [
												"api",
												"v1",
												"orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Standart+Cashless+Debt+Promo]",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const generatedFareId = pm.variables.replaceIn(\"{{$randomUUID}}\");",
													"pm.environment.set(\"orderId\", generatedFareId);",
													"console.log(\"Сгенерированный fare_id:\", generatedFareId);",
													"",
													"pm.sendRequest({",
													"    url: pm.environment.get(\"riderGatewayHost\") + \"/api/v1/payment-methods\",",
													"    method: 'GET',",
													"    header: {",
													"        'Content-Type': 'application/json',",
													"        'app_uid': pm.environment.get(\"appUid\"),",
													"        'Authorization': `Bearer ${pm.environment.get(\"riderAuthToken\")}`,",
													"    }",
													"}, function (err, res) {",
													"    if (err) {",
													"        console.error(\"Помилка запиту payment-methods:\", err);",
													"        return;",
													"    }",
													"",
													"    if (res.code >= 200 && res.code < 300) {",
													"        const jsonPaymentMethods = res.json();",
													"",
													"        if (jsonPaymentMethods.last_used && jsonPaymentMethods.last_used.id) {",
													"            pm.environment.set(\"lastUsedPaymentId\", jsonPaymentMethods.last_used.id);",
													"            console.log(\"lastUsedPaymentId встановлено:\", jsonPaymentMethods.last_used.id);",
													"        }",
													"",
													"        let paymentMethodFound = false;",
													"        if (Array.isArray(jsonPaymentMethods.payment_methods)) {",
													"            const firstCard = jsonPaymentMethods.payment_methods.find(method => method.payment_type === \"card\");",
													"            if (firstCard && firstCard.id) {",
													"                pm.environment.set(\"paymentMethodId\", firstCard.id);",
													"                console.log(\"paymentMethodId (перша карта) встановлено:\", firstCard.id);",
													"                paymentMethodFound = true;",
													"            } else {",
													"                console.log(\"Карточний метод оплати не знайдено.\");",
													"            }",
													"        } else {",
													"            console.log(\"payment_methods не є масивом або пустий.\");",
													"        }",
													"",
													"        if (!paymentMethodFound && !pm.environment.get(\"paymentMethodId\")) {",
													"            console.error(\"Не вдалося знайти жоден платіжний метод (карту або останній використаний).\");",
													"            return;",
													"        }",
													"",
													"        pm.sendRequest({",
													"            url: pm.environment.get(\"paymentProcessorHost\") + '/api/v1/riders/' + pm.environment.get(\"riderId\") + '/wallet-payments/charge',",
													"            method: 'POST',",
													"            header: {",
													"                'Content-Type': 'application/json',",
													"                'accept': '*/*',",
													"                'Authorization': `Bearer ${pm.environment.get(\"adminAuthToken\")}`",
													"            },",
													"            body: {",
													"                mode: 'raw',",
													"                raw: JSON.stringify({",
													"                    \"amount\": {",
													"                        \"amount\": 50,",
													"                        \"currency\": \"UAH\"",
													"                    },",
													"                    \"order_id\": \"589f5b9f-4179-4799-9289-c2ef0c43ccc8\",",
													"                    \"description\": \"test_charge_from_postman\",",
													"                    \"initiated_by_user_id\": pm.environment.get(\"riderId\"),",
													"                    \"region_id\": pm.environment.get(\"regionId\"),",
													"                    \"profit_loss_type\": \"rider_penalty_other\",",
													"                    \"vb_type\": \"rdr_penalties\"",
													"                })",
													"            }",
													"        }, function (err, res) {",
													"            if (err) {",
													"                console.error(\"Помилка нарахування боргу на гаманець:\", err);",
													"                return;",
													"            }",
													"",
													"            if (res.code >= 200 && res.code < 300) {",
													"                if (res.code === 204) {",
													"                    console.log(`Нарахування боргу успішне. Код: ${res.code} (Немає контенту у відповіді)`);",
													"                } else {",
													"                    const jsonChargeResponse = res.json();",
													"                    console.log(`Нарахування боргу успішне. Код: ${res.code}. Відповідь:`, jsonChargeResponse);",
													"                }",
													"            } else {",
													"                console.error(`Помилка нарахування боргу: статус ${res.code}. Відповідь:`, res.json());",
													"                return;",
													"            }",
													"",
													"            pm.sendRequest({",
													"                url: pm.environment.get(\"riderGatewayHost\") + '/api/v1/promo-codes/apply',",
													"                method: 'POST',",
													"                header: {",
													"                    'Content-Type': 'application/json',",
													"                    'app_uid': pm.environment.get(\"appUid\"),",
													"                    'Authorization': `Bearer ${pm.environment.get(\"riderAuthToken\")}`,",
													"                },",
													"                body: {",
													"                    mode: 'raw',",
													"                    raw: JSON.stringify({",
													"                        \"promo_code\": pm.environment.get(\"promoCodeName\")",
													"                    })",
													"                }",
													"            }, function (err, res) {",
													"                if (err) {",
													"                    console.error(\"Помилка застосування промокоду:\", err);",
													"                    return;",
													"                }",
													"",
													"                if (res.code >= 200 && res.code < 300) {",
													"                    if (res.text().length > 0) { // Перевіряємо, чи не порожнє тіло відповіді",
													"                        try {",
													"                            const jsonPromoResponse = res.json();",
													"                            console.log(`Застосування промокоду успішне. Код: ${res.code}. Відповідь:`, jsonPromoResponse);",
													"                        } catch (e) {",
													"                            console.error(`Помилка парсингу відповіді промокоду: ${e.message}. Код: ${res.code}. Тіло:`, res.text());",
													"                        }",
													"                    } else {",
													"                        console.log(`Застосування промокоду успішне. Код: ${res.code}. Відповідь порожня.`);",
													"                    }",
													"                } else {",
													"                    console.error(`Помилка застосування промокоду: статус ${res.code}. Відповідь:`, res.json());",
													"                    return;",
													"                }",
													"",
													"                let payload = JSON.parse(pm.environment.get(\"fareEstimatePayloadBase\"));",
													"                ",
													"                payload.fare_id = generatedFareId;",
													"                payload.payment_method.type = \"card\";",
													"                payload.payment_method.id = pm.environment.get(\"paymentMethodId\");",
													"",
													"                pm.sendRequest({",
													"                  url: pm.environment.get(\"riderGatewayHost\") + \"/api/v1/fare-estimate\",",
													"                  method: \"POST\",",
													"                  header: {",
													"                    \"Content-Type\": \"application/json\",",
													"                    \"app_uid\": pm.environment.get(\"appUid\"),",
													"                    \"Authorization\": `Bearer ${pm.environment.get(\"riderAuthToken\")}`",
													"                  },",
													"                  body: {",
													"                    mode: \"raw\",",
													"                    raw: JSON.stringify(payload)",
													"                  }",
													"                }, function (err, res) {",
													"                  if (err) {",
													"                    console.error(\"Помилка при запиті fare-estimate:\", err);",
													"                    return;",
													"                  }",
													"",
													"                  if (res.code >= 200 && res.code < 300) {",
													"                      pm.environment.set(\"fareEstimate\", JSON.stringify(res.json()));",
													"                      console.log(\"Fare estimate успішно отримано. Відповідь:\", res.json());",
													"                  } else {",
													"                      console.error(`Помилка fare-estimate: неочікуваний код статусу ${res.code}. Відповідь:`, res.json());",
													"                  }",
													"                });",
													"            });",
													"        });",
													"    } else {",
													"        console.error(`Запит payment-methods завершився зі статусом ${res.code}. Відповідь:`, res.json());",
													"    }",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{riderAuthToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Host",
												"value": "rider.dev.uklon.com.ua",
												"type": "text"
											},
											{
												"key": "user-agent",
												"value": "UklonAndroid/78200",
												"type": "text"
											},
											{
												"key": "x-fp",
												"value": "E164",
												"type": "text"
											},
											{
												"key": "app_uid",
												"value": "d211bc2a-e563-340b-bd8d-b2f95960bc0c",
												"type": "text"
											},
											{
												"key": "client_id",
												"value": "8b7b4c21cb5b43d68ac8fd7dafb96bc7",
												"type": "text"
											},
											{
												"key": "device_name",
												"value": "Xiaomi/Redmi Note 9 Pro",
												"type": "text"
											},
											{
												"key": "app_version",
												"value": "7.82.0.697812",
												"type": "text"
											},
											{
												"key": "locale",
												"value": "ru",
												"type": "text"
											},
											{
												"key": "city",
												"value": "kyiv",
												"type": "text"
											},
											{
												"key": "authorization",
												"value": "Bearer eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNyc2Etc2hhMzg0IiwidHlwIjoiSldUIn0.eyJqdGkiOiI2OTViODg1Nzg1OGQ0OGMzYWRkMGU2NDA5ODJiM2IyNyIsInVuaXF1ZV9uYW1lIjoiMzgwOTM1NTEzODMzIiwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvd3MvMjAwNS8wNS9pZGVudGl0eS9jbGFpbXMvbmFtZSI6IjM4MDkzNTUxMzgzMyIsIm5hbWVpZCI6IjMzMTc4NzU0LTZiYWItNDY0NC05NWJiLWM4NzBiNTRkZmNiYiIsImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL25hbWVpZGVudGlmaWVyIjoiMzMxNzg3NTQtNmJhYi00NjQ0LTk1YmItYzg3MGI1NGRmY2JiIiwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvd3MvMjAwNS8wNS9pZGVudGl0eS9jbGFpbXMvbW9iaWxlcGhvbmUiOiIzODA5MzU1MTM4MzMiLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9sb2NhbGl0eSI6IjEiLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL2dyb3Vwc2lkIjoiWWF6NUlzanJ3WFkzRGZ2c1hSQ0JWSEozUWJnQXYvV0dYSEhZMzV2VzMyTT0iLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9lbWFpbGFkZHJlc3MiOiJkQGdtYWlsLmNvbSIsImVtYWlsIjoiZEBnbWFpbC5jb20iLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3JvbGUiOlsiTW9kZXJhdG9yIiwiUXVhbGl0eUFnZW50IiwiQWRtaW5pc3RyYXRvciJdLCJuYmYiOjE3NDg5NjIxNDcsImV4cCI6MTc0ODk2NTc0NywiaWF0IjoxNzQ4OTYyMTQ3LCJpc3MiOiJodHRwczovL25vbnByb2QudWtsb24uY29tLnVhLyIsImF1ZCI6Imh0dHBzOi8vbm9ucHJvZC51a2xvbi5jb20udWEvIiwicHJvcGVydGllcyI6eyJkZXZpY2VfaWQiOiJkMjExYmMyYS1lNTYzLTM0MGItYmQ4ZC1iMmY5NTk2MGJjMGMiLCJhcHBfdWlkIjoiZDIxMWJjMmEtZTU2My0zNDBiLWJkOGQtYjJmOTU5NjBiYzBjIiwiY2xpZW50X2lkIjoiOGI3YjRjMjFjYjViNDNkNjhhYzhmZDdkYWZiOTZiYzciLCJzb3VyY2UiOiJJZGVudGl0eTIifX0.eTgl8zdhcCm6GIe118AWSpf7JUifuWUKTyEgyChqBlI-YqwFs1KfKySm2_77QGAwYDPwqdopr7zPUQTKQAcTX3jn_YSjuNdVA1VkOcjN8FabzNAWvSIcdoYAdTFg_sUuv10SG3QdP0X8eSY7BG5Sc4DUrOcVY-J3D4g3VZttE5nqptwu9JWdIgmYKUuQBVwVEtdTLmkyYKgx_Es0ylC7lHQCmGQi2qa37Q-utXbhOjq43JVBNwRUecnSekKufL_VQww-cQk_-wOPyVM2Mqmy6leZsu1hKWfvLXbJSTVcMptPOEIK-bAbT2CjZGIktadD3ruK1zVDCojltf6I_3y36g",
												"type": "text"
											},
											{
												"key": "content-type",
												"value": "application/json; charset=UTF-8",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"fare_id\": {{orderId}},\n\t\"product_type\": \"Standard\",\n\t\"product_conditions\": [],\n\t\"payment_method_id\": \"{{cashPaymentMethodId}}\",\n\t\"comment\": \"Не телефонуйте мені, будь ласка\",\n\t\"use_pedestrian_path\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{riderGatewayHost}}/api/v1/orders",
											"host": [
												"{{riderGatewayHost}}"
											],
											"path": [
												"api",
												"v1",
												"orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Standart+Cashless+Debt]",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const generatedFareId = pm.variables.replaceIn(\"{{$randomUUID}}\");",
													"pm.environment.set(\"orderId\", generatedFareId);",
													"console.log(\"Сгенерированный fare_id:\", generatedFareId);",
													"",
													"pm.sendRequest({",
													"    url: pm.environment.get(\"riderGatewayHost\") + \"/api/v1/payment-methods\",",
													"    method: 'GET',",
													"    header: {",
													"        'Content-Type': 'application/json',",
													"        'app_uid': pm.environment.get(\"appUid\"),",
													"        'Authorization': `Bearer ${pm.environment.get(\"riderAuthToken\")}`,",
													"    }",
													"}, function (err, res) {",
													"    if (err) {",
													"        console.error(\"Помилка запиту payment-methods:\", err);",
													"        return;",
													"    }",
													"",
													"    if (res.code >= 200 && res.code < 300) {",
													"        const jsonPaymentMethods = res.json();",
													"",
													"        if (jsonPaymentMethods.last_used && jsonPaymentMethods.last_used.id) {",
													"            pm.environment.set(\"lastUsedPaymentId\", jsonPaymentMethods.last_used.id);",
													"            console.log(\"lastUsedPaymentId встановлено:\", jsonPaymentMethods.last_used.id);",
													"        }",
													"",
													"        let paymentMethodFound = false;",
													"        if (Array.isArray(jsonPaymentMethods.payment_methods)) {",
													"            const firstCard = jsonPaymentMethods.payment_methods.find(method => method.payment_type === \"card\");",
													"            if (firstCard && firstCard.id) {",
													"                pm.environment.set(\"paymentMethodId\", firstCard.id);",
													"                console.log(\"paymentMethodId (перша карта) встановлено:\", firstCard.id);",
													"                paymentMethodFound = true;",
													"            } else {",
													"                console.log(\"Карточний метод оплати не знайдено.\");",
													"            }",
													"        } else {",
													"            console.log(\"payment_methods не є масивом або пустий.\");",
													"        }",
													"",
													"        if (!paymentMethodFound && !pm.environment.get(\"paymentMethodId\")) {",
													"            console.error(\"Не вдалося знайти жоден платіжний метод (карту або останній використаний).\");",
													"            return;",
													"        }",
													"",
													"        pm.sendRequest({",
													"            url: pm.environment.get(\"paymentProcessorHost\") + '/api/v1/riders/' + pm.environment.get(\"riderId\") + '/wallet-payments/charge',",
													"            method: 'POST',",
													"            header: {",
													"                'Content-Type': 'application/json',",
													"                'accept': '*/*',",
													"                'Authorization': `Bearer ${pm.environment.get(\"adminAuthToken\")}`",
													"            },",
													"            body: {",
													"                mode: 'raw',",
													"                raw: JSON.stringify({",
													"                    \"amount\": {",
													"                        \"amount\": 50,",
													"                        \"currency\": \"UAH\"",
													"                    },",
													"                    \"order_id\": \"589f5b9f-4179-4799-9289-c2ef0c43ccc8\",",
													"                    \"description\": \"test_charge_from_postman\",",
													"                    \"initiated_by_user_id\": pm.environment.get(\"riderId\"),",
													"                    \"region_id\": pm.environment.get(\"regionId\"),",
													"                    \"profit_loss_type\": \"rider_penalty_other\",",
													"                    \"vb_type\": \"rdr_penalties\"",
													"                })",
													"            }",
													"        }, function (err, res) {",
													"            if (err) {",
													"                console.error(\"Помилка нарахування боргу на гаманець:\", err);",
													"                return;",
													"            }",
													"",
													"            if (res.code >= 200 && res.code < 300) {",
													"                if (res.code === 204) {",
													"                    console.log(`Нарахування боргу успішне. Код: ${res.code} (Немає контенту у відповіді)`);",
													"                } else {",
													"                    const jsonChargeResponse = res.json();",
													"                    console.log(`Нарахування боргу успішне. Код: ${res.code}. Відповідь:`, jsonChargeResponse);",
													"                }",
													"            } else {",
													"                console.error(`Помилка нарахування боргу: статус ${res.code}. Відповідь:`, res.json());",
													"                return;",
													"            }",
													"",
													"                let payload = JSON.parse(pm.environment.get(\"fareEstimatePayloadBase\"));",
													"                ",
													"                payload.fare_id = generatedFareId;",
													"                payload.payment_method.type = \"card\";",
													"                payload.payment_method.id = pm.environment.get(\"paymentMethodId\");",
													"",
													"                pm.sendRequest({",
													"                  url: pm.environment.get(\"riderGatewayHost\") + \"/api/v1/fare-estimate\",",
													"                  method: \"POST\",",
													"                  header: {",
													"                    \"Content-Type\": \"application/json\",",
													"                    \"app_uid\": pm.environment.get(\"appUid\"),",
													"                    \"Authorization\": `Bearer ${pm.environment.get(\"riderAuthToken\")}`",
													"                  },",
													"                  body: {",
													"                    mode: \"raw\",",
													"                    raw: JSON.stringify(payload)",
													"                  }",
													"                }, function (err, res) {",
													"                  if (err) {",
													"                    console.error(\"Помилка при запиті fare-estimate:\", err);",
													"                    return;",
													"                  }",
													"",
													"                  if (res.code >= 200 && res.code < 300) {",
													"                      pm.environment.set(\"fareEstimate\", JSON.stringify(res.json()));",
													"                      console.log(\"Fare estimate успішно отримано. Відповідь:\", res.json());",
													"                  } else {",
													"                      console.error(`Помилка fare-estimate: неочікуваний код статусу ${res.code}. Відповідь:`, res.json());",
													"                  }",
													"                });",
													"            });",
													"    } else {",
													"        console.error(`Запит payment-methods завершився зі статусом ${res.code}. Відповідь:`, res.json());",
													"    }",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{riderAuthToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Host",
												"value": "rider.dev.uklon.com.ua",
												"type": "text"
											},
											{
												"key": "user-agent",
												"value": "UklonAndroid/78200",
												"type": "text"
											},
											{
												"key": "x-fp",
												"value": "E164",
												"type": "text"
											},
											{
												"key": "app_uid",
												"value": "d211bc2a-e563-340b-bd8d-b2f95960bc0c",
												"type": "text"
											},
											{
												"key": "client_id",
												"value": "8b7b4c21cb5b43d68ac8fd7dafb96bc7",
												"type": "text"
											},
											{
												"key": "device_name",
												"value": "Xiaomi/Redmi Note 9 Pro",
												"type": "text"
											},
											{
												"key": "app_version",
												"value": "7.82.0.697812",
												"type": "text"
											},
											{
												"key": "locale",
												"value": "ru",
												"type": "text"
											},
											{
												"key": "city",
												"value": "kyiv",
												"type": "text"
											},
											{
												"key": "authorization",
												"value": "Bearer eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNyc2Etc2hhMzg0IiwidHlwIjoiSldUIn0.eyJqdGkiOiI2OTViODg1Nzg1OGQ0OGMzYWRkMGU2NDA5ODJiM2IyNyIsInVuaXF1ZV9uYW1lIjoiMzgwOTM1NTEzODMzIiwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvd3MvMjAwNS8wNS9pZGVudGl0eS9jbGFpbXMvbmFtZSI6IjM4MDkzNTUxMzgzMyIsIm5hbWVpZCI6IjMzMTc4NzU0LTZiYWItNDY0NC05NWJiLWM4NzBiNTRkZmNiYiIsImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL25hbWVpZGVudGlmaWVyIjoiMzMxNzg3NTQtNmJhYi00NjQ0LTk1YmItYzg3MGI1NGRmY2JiIiwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvd3MvMjAwNS8wNS9pZGVudGl0eS9jbGFpbXMvbW9iaWxlcGhvbmUiOiIzODA5MzU1MTM4MzMiLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9sb2NhbGl0eSI6IjEiLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL2dyb3Vwc2lkIjoiWWF6NUlzanJ3WFkzRGZ2c1hSQ0JWSEozUWJnQXYvV0dYSEhZMzV2VzMyTT0iLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9lbWFpbGFkZHJlc3MiOiJkQGdtYWlsLmNvbSIsImVtYWlsIjoiZEBnbWFpbC5jb20iLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3JvbGUiOlsiTW9kZXJhdG9yIiwiUXVhbGl0eUFnZW50IiwiQWRtaW5pc3RyYXRvciJdLCJuYmYiOjE3NDg5NjIxNDcsImV4cCI6MTc0ODk2NTc0NywiaWF0IjoxNzQ4OTYyMTQ3LCJpc3MiOiJodHRwczovL25vbnByb2QudWtsb24uY29tLnVhLyIsImF1ZCI6Imh0dHBzOi8vbm9ucHJvZC51a2xvbi5jb20udWEvIiwicHJvcGVydGllcyI6eyJkZXZpY2VfaWQiOiJkMjExYmMyYS1lNTYzLTM0MGItYmQ4ZC1iMmY5NTk2MGJjMGMiLCJhcHBfdWlkIjoiZDIxMWJjMmEtZTU2My0zNDBiLWJkOGQtYjJmOTU5NjBiYzBjIiwiY2xpZW50X2lkIjoiOGI3YjRjMjFjYjViNDNkNjhhYzhmZDdkYWZiOTZiYzciLCJzb3VyY2UiOiJJZGVudGl0eTIifX0.eTgl8zdhcCm6GIe118AWSpf7JUifuWUKTyEgyChqBlI-YqwFs1KfKySm2_77QGAwYDPwqdopr7zPUQTKQAcTX3jn_YSjuNdVA1VkOcjN8FabzNAWvSIcdoYAdTFg_sUuv10SG3QdP0X8eSY7BG5Sc4DUrOcVY-J3D4g3VZttE5nqptwu9JWdIgmYKUuQBVwVEtdTLmkyYKgx_Es0ylC7lHQCmGQi2qa37Q-utXbhOjq43JVBNwRUecnSekKufL_VQww-cQk_-wOPyVM2Mqmy6leZsu1hKWfvLXbJSTVcMptPOEIK-bAbT2CjZGIktadD3ruK1zVDCojltf6I_3y36g",
												"type": "text"
											},
											{
												"key": "content-type",
												"value": "application/json; charset=UTF-8",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"fare_id\": {{orderId}},\n\t\"product_type\": \"Standard\",\n\t\"product_conditions\": [],\n\t\"payment_method_id\": \"{{cashPaymentMethodId}}\",\n\t\"comment\": \"Іван привіт\",\n\t\"use_pedestrian_path\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{riderGatewayHost}}/api/v1/orders",
											"host": [
												"{{riderGatewayHost}}"
											],
											"path": [
												"api",
												"v1",
												"orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Standart+Cashless+Promo]",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const generatedFareId = pm.variables.replaceIn(\"{{$randomUUID}}\");",
													"pm.environment.set(\"orderId\", generatedFareId);",
													"console.log(\"Сгенерированный fare_id:\", generatedFareId);",
													"",
													"pm.sendRequest({",
													"    url: pm.environment.get(\"riderGatewayHost\") + \"/api/v1/payment-methods\",",
													"    method: 'GET',",
													"    header: {",
													"        'Content-Type': 'application/json',",
													"        'app_uid': pm.environment.get(\"appUid\"),",
													"        'Authorization': `Bearer ${pm.environment.get(\"riderAuthToken\")}`,",
													"    }",
													"}, function (err, res) {",
													"    if (err) {",
													"        console.error(\"Помилка запиту payment-methods:\", err);",
													"        return;",
													"    }",
													"",
													"    if (res.code >= 200 && res.code < 300) {",
													"        const jsonPaymentMethods = res.json();",
													"",
													"        if (jsonPaymentMethods.last_used && jsonPaymentMethods.last_used.id) {",
													"            pm.environment.set(\"lastUsedPaymentId\", jsonPaymentMethods.last_used.id);",
													"            console.log(\"lastUsedPaymentId встановлено:\", jsonPaymentMethods.last_used.id);",
													"        }",
													"",
													"        let paymentMethodFound = false;",
													"        if (Array.isArray(jsonPaymentMethods.payment_methods)) {",
													"            const firstCard = jsonPaymentMethods.payment_methods.find(method => method.payment_type === \"card\");",
													"            if (firstCard && firstCard.id) {",
													"                pm.environment.set(\"paymentMethodId\", firstCard.id);",
													"                console.log(\"paymentMethodId (перша карта) встановлено:\", firstCard.id);",
													"                paymentMethodFound = true;",
													"            } else {",
													"                console.log(\"Карточний метод оплати не знайдено.\");",
													"            }",
													"        } else {",
													"            console.log(\"payment_methods не є масивом або пустий.\");",
													"        }",
													"",
													"        if (!paymentMethodFound && !pm.environment.get(\"paymentMethodId\")) {",
													"            console.error(\"Не вдалося знайти жоден платіжний метод (карту або останній використаний).\");",
													"            return;",
													"        }",
													"",
													"            pm.sendRequest({",
													"                url: pm.environment.get(\"riderGatewayHost\") + '/api/v1/promo-codes/apply',",
													"                method: 'POST',",
													"                header: {",
													"                    'Content-Type': 'application/json',",
													"                    'app_uid': pm.environment.get(\"appUid\"),",
													"                    'Authorization': `Bearer ${pm.environment.get(\"riderAuthToken\")}`,",
													"                },",
													"                body: {",
													"                    mode: 'raw',",
													"                    raw: JSON.stringify({",
													"                        \"promo_code\": pm.environment.get(\"promoCodeName\")",
													"                    })",
													"                }",
													"            }, function (err, res) {",
													"                if (err) {",
													"                    console.error(\"Помилка застосування промокоду:\", err);",
													"                    return;",
													"                }",
													"",
													"                if (res.code >= 200 && res.code < 300) {",
													"                    if (res.text().length > 0) { // Перевіряємо, чи не порожнє тіло відповіді",
													"                        try {",
													"                            const jsonPromoResponse = res.json();",
													"                            console.log(`Застосування промокоду успішне. Код: ${res.code}. Відповідь:`, jsonPromoResponse);",
													"                        } catch (e) {",
													"                            console.error(`Помилка парсингу відповіді промокоду: ${e.message}. Код: ${res.code}. Тіло:`, res.text());",
													"                        }",
													"                    } else {",
													"                        console.log(`Застосування промокоду успішне. Код: ${res.code}. Відповідь порожня.`);",
													"                    }",
													"                } else {",
													"                    console.error(`Помилка застосування промокоду: статус ${res.code}. Відповідь:`, res.json());",
													"                    return;",
													"                }",
													"",
													"                let payload = JSON.parse(pm.environment.get(\"fareEstimatePayloadBase\"));",
													"                ",
													"                payload.fare_id = generatedFareId;",
													"                payload.payment_method.type = \"card\";",
													"                payload.payment_method.id = pm.environment.get(\"paymentMethodId\");",
													"",
													"                pm.sendRequest({",
													"                  url: pm.environment.get(\"riderGatewayHost\") + \"/api/v1/fare-estimate\",",
													"                  method: \"POST\",",
													"                  header: {",
													"                    \"Content-Type\": \"application/json\",",
													"                    \"app_uid\": pm.environment.get(\"appUid\"),",
													"                    \"Authorization\": `Bearer ${pm.environment.get(\"riderAuthToken\")}`",
													"                  },",
													"                  body: {",
													"                    mode: \"raw\",",
													"                    raw: JSON.stringify(payload)",
													"                  }",
													"                }, function (err, res) {",
													"                  if (err) {",
													"                    console.error(\"Помилка при запиті fare-estimate:\", err);",
													"                    return;",
													"                  }",
													"",
													"                  if (res.code >= 200 && res.code < 300) {",
													"                      pm.environment.set(\"fareEstimate\", JSON.stringify(res.json()));",
													"                      console.log(\"Fare estimate успішно отримано. Відповідь:\", res.json());",
													"                  } else {",
													"                      console.error(`Помилка fare-estimate: неочікуваний код статусу ${res.code}. Відповідь:`, res.json());",
													"                  }",
													"                });",
													"            });",
													"    } else {",
													"        console.error(`Запит payment-methods завершився зі статусом ${res.code}. Відповідь:`, res.json());",
													"    }",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{riderAuthToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Host",
												"value": "rider.dev.uklon.com.ua",
												"type": "text"
											},
											{
												"key": "user-agent",
												"value": "UklonAndroid/78200",
												"type": "text"
											},
											{
												"key": "x-fp",
												"value": "E164",
												"type": "text"
											},
											{
												"key": "app_uid",
												"value": "d211bc2a-e563-340b-bd8d-b2f95960bc0c",
												"type": "text"
											},
											{
												"key": "client_id",
												"value": "8b7b4c21cb5b43d68ac8fd7dafb96bc7",
												"type": "text"
											},
											{
												"key": "device_name",
												"value": "Xiaomi/Redmi Note 9 Pro",
												"type": "text"
											},
											{
												"key": "app_version",
												"value": "7.82.0.697812",
												"type": "text"
											},
											{
												"key": "locale",
												"value": "ru",
												"type": "text"
											},
											{
												"key": "city",
												"value": "kyiv",
												"type": "text"
											},
											{
												"key": "authorization",
												"value": "Bearer eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNyc2Etc2hhMzg0IiwidHlwIjoiSldUIn0.eyJqdGkiOiI2OTViODg1Nzg1OGQ0OGMzYWRkMGU2NDA5ODJiM2IyNyIsInVuaXF1ZV9uYW1lIjoiMzgwOTM1NTEzODMzIiwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvd3MvMjAwNS8wNS9pZGVudGl0eS9jbGFpbXMvbmFtZSI6IjM4MDkzNTUxMzgzMyIsIm5hbWVpZCI6IjMzMTc4NzU0LTZiYWItNDY0NC05NWJiLWM4NzBiNTRkZmNiYiIsImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL25hbWVpZGVudGlmaWVyIjoiMzMxNzg3NTQtNmJhYi00NjQ0LTk1YmItYzg3MGI1NGRmY2JiIiwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvd3MvMjAwNS8wNS9pZGVudGl0eS9jbGFpbXMvbW9iaWxlcGhvbmUiOiIzODA5MzU1MTM4MzMiLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9sb2NhbGl0eSI6IjEiLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL2dyb3Vwc2lkIjoiWWF6NUlzanJ3WFkzRGZ2c1hSQ0JWSEozUWJnQXYvV0dYSEhZMzV2VzMyTT0iLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9lbWFpbGFkZHJlc3MiOiJkQGdtYWlsLmNvbSIsImVtYWlsIjoiZEBnbWFpbC5jb20iLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3JvbGUiOlsiTW9kZXJhdG9yIiwiUXVhbGl0eUFnZW50IiwiQWRtaW5pc3RyYXRvciJdLCJuYmYiOjE3NDg5NjIxNDcsImV4cCI6MTc0ODk2NTc0NywiaWF0IjoxNzQ4OTYyMTQ3LCJpc3MiOiJodHRwczovL25vbnByb2QudWtsb24uY29tLnVhLyIsImF1ZCI6Imh0dHBzOi8vbm9ucHJvZC51a2xvbi5jb20udWEvIiwicHJvcGVydGllcyI6eyJkZXZpY2VfaWQiOiJkMjExYmMyYS1lNTYzLTM0MGItYmQ4ZC1iMmY5NTk2MGJjMGMiLCJhcHBfdWlkIjoiZDIxMWJjMmEtZTU2My0zNDBiLWJkOGQtYjJmOTU5NjBiYzBjIiwiY2xpZW50X2lkIjoiOGI3YjRjMjFjYjViNDNkNjhhYzhmZDdkYWZiOTZiYzciLCJzb3VyY2UiOiJJZGVudGl0eTIifX0.eTgl8zdhcCm6GIe118AWSpf7JUifuWUKTyEgyChqBlI-YqwFs1KfKySm2_77QGAwYDPwqdopr7zPUQTKQAcTX3jn_YSjuNdVA1VkOcjN8FabzNAWvSIcdoYAdTFg_sUuv10SG3QdP0X8eSY7BG5Sc4DUrOcVY-J3D4g3VZttE5nqptwu9JWdIgmYKUuQBVwVEtdTLmkyYKgx_Es0ylC7lHQCmGQi2qa37Q-utXbhOjq43JVBNwRUecnSekKufL_VQww-cQk_-wOPyVM2Mqmy6leZsu1hKWfvLXbJSTVcMptPOEIK-bAbT2CjZGIktadD3ruK1zVDCojltf6I_3y36g",
												"type": "text"
											},
											{
												"key": "content-type",
												"value": "application/json; charset=UTF-8",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"fare_id\": {{orderId}},\n\t\"product_type\": \"Standard\",\n\t\"product_conditions\": [],\n\t\"payment_method_id\": \"{{cashPaymentMethodId}}\",\n\t\"comment\": \"Не телефонуйте мені, будь ласка\",\n\t\"use_pedestrian_path\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{riderGatewayHost}}/api/v1/orders",
											"host": [
												"{{riderGatewayHost}}"
											],
											"path": [
												"api",
												"v1",
												"orders"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Restrictions",
			"item": [
				{
					"name": "CreateRestriction",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{adminAuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNyc2Etc2hhMzg0IiwidHlwIjoiSldUIn0.eyJqdGkiOiI1YWMyNWM5YTAwZWE0NzcwOWRkOThkODkxYzU5MzNhNiIsInVuaXF1ZV9uYW1lIjoiMzgwOTM1NTEzODM5IiwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvd3MvMjAwNS8wNS9pZGVudGl0eS9jbGFpbXMvbmFtZSI6IjM4MDkzNTUxMzgzOSIsIm5hbWVpZCI6IjZhZjY1MjUyLWYxNTEtNDlmMC1iZTcwLTQ5NWMyNzFjYWQ1NiIsImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL25hbWVpZGVudGlmaWVyIjoiNmFmNjUyNTItZjE1MS00OWYwLWJlNzAtNDk1YzI3MWNhZDU2IiwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvd3MvMjAwNS8wNS9pZGVudGl0eS9jbGFpbXMvbW9iaWxlcGhvbmUiOiIzODA5MzU1MTM4MzkiLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9sb2NhbGl0eSI6IjEiLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL2dyb3Vwc2lkIjoiQnd5UXF1bHZWT0lIN1QweHY0RWV6K21jS1RSSXVydVVnbm9NMWt0MkhpOD0iLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9lbWFpbGFkZHJlc3MiOiJkLnZvbG9zaHluQHVrbG9uLmNvbS51YSIsImVtYWlsIjoiZC52b2xvc2h5bkB1a2xvbi5jb20udWEiLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3JvbGUiOlsiT2JqZWN0T3duZXIiLCJPcmRlckFwaU93bmVyIiwiVHJ1c3RlZFVzZXIiLCJEZXZlbG9wZXIiLCJNYXJrZXRvbG9nIiwiQmV0YVRlc3RlciIsIkFjY291bnRhbnQiLCJJbnN1cmFuY2VBZ2VudCIsIkFjY291bnRhbnRTdXBlcnZpc29yIiwiRGlzcGF0Y2hlciIsIkRpc3BhdGNoU3VwZXJ2aXNvciIsIlF1YWxpdHlBZ2VudCIsIlVrbG9uRW1wbG95ZWUiLCJTbW1NYW5hZ2VyIiwiSW5jaWRlbnRNYW5hZ2VyIiwiVGVtcGxhdGVfTW9kZXJhdG9yIiwiQTJDTWFuYWdlciIsIkdsb2JhbFBhcnRuZXJNb2RlcmF0b3IiLCJBZG1pbmlzdHJhdG9yIiwiUGVhY2VLZWVwZXIiLCJTaHJlayIsIlJlc3RyaWN0ZWRTdXBlcnZpc29yIiwiQjJCTWFuYWdlciIsIlByaWNlTWFuYWdlciIsIkV4dGVybmFsT3BlcmF0b3IiLCJQYXJ0bmVyc01pZ3JhdGlvbk1vZGVyYXRvciIsIkdvZFBhcnRuZXJNb2RlcmF0b3IiLCJHb2RVc2VyIiwiTWFwTW9kZXJhdG9yIiwiR29kQ291cmllck1vZGVyYXRvciIsIkNvdXJpZXJNb2RlcmF0b3IiLCJNb2RlcmF0b3IiLCJQYXJ0bmVyTW9kZXJhdG9yIiwiQWNjZXNzTWFuYWdlciIsIkNvcmVBZG1pbmlzdHJhdG9yIiwiQm9udXNQYXltZW50cyIsIkNvcnBvcmF0ZUNvbXBhbnlBZG1pbmlzdHJhdG9yIiwiUGFydG5lck93bmVyIiwiUGFydG5lclNldHRpbmdNYW5hZ2VyIiwiQjJCRGVsaXZlcnlNYW5hZ2VyIiwiR2xvYmFsQ291cmllck1vZGVyYXRvciIsIkNvdXJpZXJBZG1pbmlzdHJhdG9yIiwiRmluYW5jZUNvbnRyb2xsZXIiLCJ0ZXN0Um9sZUZvckFEIl0sIm5iZiI6MTc0OTIyNTAxMywiZXhwIjoxNzQ5MjMyMjEzLCJpYXQiOjE3NDkyMjUwMTMsImlzcyI6Imh0dHBzOi8vbm9ucHJvZC51a2xvbi5jb20udWEvIiwiYXVkIjoiaHR0cHM6Ly9ub25wcm9kLnVrbG9uLmNvbS51YS8iLCJwcm9wZXJ0aWVzIjp7ImRldmljZV9pZCI6IjhhNTFlZjQwLTI3ZDQtNDRmNy1iZWU3LTQ2ZTFlNGZiNmY1MSIsImFwcF91aWQiOiI4YTUxZWY0MC0yN2Q0LTQ0ZjctYmVlNy00NmUxZTRmYjZmNTEiLCJjbGllbnRfaWQiOiI2Mjg5ZGU4NTFmYzcyNmY4ODdhZjhkNWQ3YTU2YzYzNSIsInNvdXJjZSI6IkludGVybmFsIn19.JbNtGRLtrN5-BC3TjGlsXCBIbj0c0drZlg7PpD4LcJrO8QNb51eCQkBO7fZKbzoyjOd9hcfl3FtDxSRok2Y6vfPG5d9mHo8DhvjVlev-k2K9MuQKJ7t8fOuhFrXaq-wbLRu7tMC3JXh7S4-NVm1uRvx--JKuq_faFEtEyuQ695LAAtSWhAzplHL5rM2OGjfn-nU8jxGu6QN0pWnP6bFZ4CZxs9ic4WPmMOm_pJiyxWlL4LfSoSjUXpcKx9Y4pXcwkzprMYMbfKbDfkcZnioI4iaYdZBsFvpLbgY0zvLuz0Sjo4Jqzc4hqFFDc50vKuOaAMP4uZ8EPiev6qtH8VwtkA",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"FilterOffer\",\n  \"fleet_id\": \"{{driverFleetId}}\",\n  \"actual_from\": 1749225071\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{partnersHost}}/api/v1/drivers/{{driverId}}/restrictions",
							"host": [
								"{{partnersHost}}"
							],
							"path": [
								"api",
								"v1",
								"drivers",
								"{{driverId}}",
								"restrictions"
							]
						}
					},
					"response": [
						{
							"name": "CreateRestriction",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "accept",
										"value": "*/*"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNyc2Etc2hhMzg0IiwidHlwIjoiSldUIn0.eyJqdGkiOiI1YWMyNWM5YTAwZWE0NzcwOWRkOThkODkxYzU5MzNhNiIsInVuaXF1ZV9uYW1lIjoiMzgwOTM1NTEzODM5IiwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvd3MvMjAwNS8wNS9pZGVudGl0eS9jbGFpbXMvbmFtZSI6IjM4MDkzNTUxMzgzOSIsIm5hbWVpZCI6IjZhZjY1MjUyLWYxNTEtNDlmMC1iZTcwLTQ5NWMyNzFjYWQ1NiIsImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL25hbWVpZGVudGlmaWVyIjoiNmFmNjUyNTItZjE1MS00OWYwLWJlNzAtNDk1YzI3MWNhZDU2IiwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvd3MvMjAwNS8wNS9pZGVudGl0eS9jbGFpbXMvbW9iaWxlcGhvbmUiOiIzODA5MzU1MTM4MzkiLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9sb2NhbGl0eSI6IjEiLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL2dyb3Vwc2lkIjoiQnd5UXF1bHZWT0lIN1QweHY0RWV6K21jS1RSSXVydVVnbm9NMWt0MkhpOD0iLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9lbWFpbGFkZHJlc3MiOiJkLnZvbG9zaHluQHVrbG9uLmNvbS51YSIsImVtYWlsIjoiZC52b2xvc2h5bkB1a2xvbi5jb20udWEiLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3JvbGUiOlsiT2JqZWN0T3duZXIiLCJPcmRlckFwaU93bmVyIiwiVHJ1c3RlZFVzZXIiLCJEZXZlbG9wZXIiLCJNYXJrZXRvbG9nIiwiQmV0YVRlc3RlciIsIkFjY291bnRhbnQiLCJJbnN1cmFuY2VBZ2VudCIsIkFjY291bnRhbnRTdXBlcnZpc29yIiwiRGlzcGF0Y2hlciIsIkRpc3BhdGNoU3VwZXJ2aXNvciIsIlF1YWxpdHlBZ2VudCIsIlVrbG9uRW1wbG95ZWUiLCJTbW1NYW5hZ2VyIiwiSW5jaWRlbnRNYW5hZ2VyIiwiVGVtcGxhdGVfTW9kZXJhdG9yIiwiQTJDTWFuYWdlciIsIkdsb2JhbFBhcnRuZXJNb2RlcmF0b3IiLCJBZG1pbmlzdHJhdG9yIiwiUGVhY2VLZWVwZXIiLCJTaHJlayIsIlJlc3RyaWN0ZWRTdXBlcnZpc29yIiwiQjJCTWFuYWdlciIsIlByaWNlTWFuYWdlciIsIkV4dGVybmFsT3BlcmF0b3IiLCJQYXJ0bmVyc01pZ3JhdGlvbk1vZGVyYXRvciIsIkdvZFBhcnRuZXJNb2RlcmF0b3IiLCJHb2RVc2VyIiwiTWFwTW9kZXJhdG9yIiwiR29kQ291cmllck1vZGVyYXRvciIsIkNvdXJpZXJNb2RlcmF0b3IiLCJNb2RlcmF0b3IiLCJQYXJ0bmVyTW9kZXJhdG9yIiwiQWNjZXNzTWFuYWdlciIsIkNvcmVBZG1pbmlzdHJhdG9yIiwiQm9udXNQYXltZW50cyIsIkNvcnBvcmF0ZUNvbXBhbnlBZG1pbmlzdHJhdG9yIiwiUGFydG5lck93bmVyIiwiUGFydG5lclNldHRpbmdNYW5hZ2VyIiwiQjJCRGVsaXZlcnlNYW5hZ2VyIiwiR2xvYmFsQ291cmllck1vZGVyYXRvciIsIkNvdXJpZXJBZG1pbmlzdHJhdG9yIiwiRmluYW5jZUNvbnRyb2xsZXIiLCJ0ZXN0Um9sZUZvckFEIl0sIm5iZiI6MTc0OTIyNTAxMywiZXhwIjoxNzQ5MjMyMjEzLCJpYXQiOjE3NDkyMjUwMTMsImlzcyI6Imh0dHBzOi8vbm9ucHJvZC51a2xvbi5jb20udWEvIiwiYXVkIjoiaHR0cHM6Ly9ub25wcm9kLnVrbG9uLmNvbS51YS8iLCJwcm9wZXJ0aWVzIjp7ImRldmljZV9pZCI6IjhhNTFlZjQwLTI3ZDQtNDRmNy1iZWU3LTQ2ZTFlNGZiNmY1MSIsImFwcF91aWQiOiI4YTUxZWY0MC0yN2Q0LTQ0ZjctYmVlNy00NmUxZTRmYjZmNTEiLCJjbGllbnRfaWQiOiI2Mjg5ZGU4NTFmYzcyNmY4ODdhZjhkNWQ3YTU2YzYzNSIsInNvdXJjZSI6IkludGVybmFsIn19.JbNtGRLtrN5-BC3TjGlsXCBIbj0c0drZlg7PpD4LcJrO8QNb51eCQkBO7fZKbzoyjOd9hcfl3FtDxSRok2Y6vfPG5d9mHo8DhvjVlev-k2K9MuQKJ7t8fOuhFrXaq-wbLRu7tMC3JXh7S4-NVm1uRvx--JKuq_faFEtEyuQ695LAAtSWhAzplHL5rM2OGjfn-nU8jxGu6QN0pWnP6bFZ4CZxs9ic4WPmMOm_pJiyxWlL4LfSoSjUXpcKx9Y4pXcwkzprMYMbfKbDfkcZnioI4iaYdZBsFvpLbgY0zvLuz0Sjo4Jqzc4hqFFDc50vKuOaAMP4uZ8EPiev6qtH8VwtkA",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"FilterOffer\",\n  \"fleet_id\": \"{{driverFleetId}}\",\n  \"actual_from\": 1749225071\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{partnersHost}}/api/v1/drivers/{{driverId}}/restrictions",
									"host": [
										"{{partnersHost}}"
									],
									"path": [
										"api",
										"v1",
										"drivers",
										"{{driverId}}",
										"restrictions"
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}
